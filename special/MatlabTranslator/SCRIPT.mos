// name: OMCC
// status: correct
// cflags: +g=MetaModelica +d=rml
// runScript("LoadCompilerSources.mos");

getErrorString();

OpenModelica.Scripting.setCFlags("-g " + getCFlags());
getErrorString();
files := {
  "Types.mo",
  //"Absyn.mo",
  "AbsynMat.mo",
  "../../../OMCompiler/Compiler/FrontEnd/Absyn.mo",
  "../../../OMCompiler/Compiler/Util/Error.mo",
  "../../../OMCompiler/Compiler/Util/ErrorExt.mo", 
  "../../../OMCompiler/Compiler/Util/Print.mo",
  "../../../OMCompiler/Compiler/Util/StringUtil.mo",
  "../../../OMCompiler/Compiler/Util/Flags.mo",
  "../../../OMCompiler/Compiler/Global/Global.mo",
  "../../../OMCompiler/Compiler/Util/Config.mo",
  "../../../OMCompiler/Compiler/Util/Debug.mo",
  "../../../OMCompiler/Compiler/Util/List.mo",
  "../../../OMCompiler/Compiler/Util/Settings.mo",
  "../../../OMCompiler/Compiler/Util/Corba.mo",
  "../../../OMCompiler/Compiler/Util/Util.mo",
  "../../../OMCompiler/Compiler/Util/System.mo",
  "../../../OMCompiler/Compiler/SimCode/SimCodeUtil.mo",
  "../../../OMCompiler/Compiler/Template/AbsynDumpTpl.mo",
  "../../../OMCompiler/Compiler/FrontEnd/Dump.mo",
  "../../../OMCompiler/Compiler/Template/Tpl.mo",  
  "TokenModelica.mo",
  "LexTableModelica.mo",
  "LexerCodeModelica.mo",
  "LexerModelica.mo",
  "ParseCodeModelica.mo",
  "ParserModelica.mo",
  "ParseTableModelica.mo",
  "Translate.mo",
  "Mat_Builtin.mo",
  "Mod_Builtin.mo",
  "Fnc_Handle.mo",
  "Main.mo"}; 
  getErrorString();
setCommandLineOptions({"+g=MetaModelica","+d=rml"});
loadFile(files);
getErrorString();

// add your test case here
Main.main({"./Workingexamples/area_inside.m","Modelica"});

// some more working examples
/*
{Main.main({"./Workingexamples/" + file,"Modelica"}) for file in {"add_subtract_together.m","add_then_subtract.m","area_inside.m",
                                                       "array_extremes.m","array_max.m","array_min.m","bubbleSort.m","counter.m",
                                                       "cube.m","engine_model.m","fact.m","findmax.m",isperfect.m","multiple.m",
                                                       "normalfact.m","quadratic.m","traparea.m"}}; */

getErrorString();