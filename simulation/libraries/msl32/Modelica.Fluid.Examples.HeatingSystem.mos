// name:     Modelica.Fluid.Examples.HeatingSystem
// keywords: simulation MSL Examples
// status: correct
//
// Simulation Results
// Modelica Standard Library
//
setCommandLineOptions("--postOptModules-=wrapFunctionCalls --preOptModules-=resolveLoops"); getErrorString();
runScript("../common/ModelTestingDefaults.mos"); getErrorString();

timeoutSim := 600;
modelTestingType := OpenModelicaModelTesting.Kind.Compilation;
modelName := $TypeName(Modelica.Fluid.Examples.HeatingSystem);
stopTime := 600.0;
compareVars :=
{
   "heater.mediums[1].h",
   "heater.mediums[1].p",
   "pipe.mediums[1].h",
   "pipe.mediums[2].h",
   "pipe.mediums[2].p",
   "radiator.mediums[1].h",
   "radiator.mediums[1].p",
   "tank.level",
   "tank.medium.h"
};

runScript(modelTesting);getErrorString();

// Result:
// true
// ""
// "true
// "
// ""
// 600
// OpenModelicaModelTesting.Kind.Compilation
// Modelica.Fluid.Examples.HeatingSystem
// 600.0
// {"heater.mediums[1].h","heater.mediums[1].p","pipe.mediums[1].h","pipe.mediums[2].h","pipe.mediums[2].p","radiator.mediums[1].h","radiator.mediums[1].p","tank.level","tank.medium.h"}
// Compilation succeeded
// Warning: There are iteration variables with default zero start attribute. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// Warning: The linear system: 
// 1 : pump.dp_pump = pump.p_b_nominal - tank.ports[2].p
// 2 : pump.dp_pump = pump.medium.p - tank.ports[2].p
// [
//   1.0 , 1.0 ;
//   1.0 , 1.0
// ]
//   *
// [
//   tank.ports[2].p ;
//   pump.dp_pump
// ]
//   =
// [
//   pump.p_b_nominal ;
//   pump.medium.p
// ]
//  might be structurally or numerically singular for variable pump.dp_pump since U(2,2) = 0.0. It might be hard to solve. Compilation continues anyway.
// Warning: The linear system: 
// 1 : pump.dp_pump = pump.medium.p - tank.ports[2].p
// 2 : pump.dp_pump = pump.p_b_nominal - tank.ports[2].p
// [
//   1.0 , 1.0 ;
//   1.0 , 1.0
// ]
//   *
// [
//   pump.dp_pump ;
//   tank.ports[2].p
// ]
//   =
// [
//   pump.medium.p ;
//   pump.p_b_nominal
// ]
//  might be structurally or numerically singular for variable tank.ports[2].p since U(2,2) = 0.0. It might be hard to solve. Compilation continues anyway.
// "true
// "
// ""
// endResult
