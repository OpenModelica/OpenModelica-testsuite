// name:     Modelica.Media.Examples.TestOnly.MixIdealGasAir
// keywords: simulation MSL Examples
// status: correct
//
// Simulation Results
// Modelica Standard Library
//

runScript("../common/ModelTestingDefaults.mos"); getErrorString();

modelTestingType := OpenModelicaModelTesting.Kind.VerifiedSimulation;
modelName := $TypeName(Modelica.Media.Examples.TestOnly.MixIdealGasAir);
compareVars :=
{
   "medium.p",
   "medium.T",
   "medium2.p",
   "medium2.T",
   "medium2.X[1]",
   "medium2.X[2]"
};

runScript(modelTesting);getErrorString();

// Result:
// "true
// "
// ""
// OpenModelicaModelTesting.Kind.VerifiedSimulation
// Modelica.Media.Examples.TestOnly.MixIdealGasAir
// {"medium.p","medium.T","medium2.p","medium2.T","medium2.X[1]","medium2.X[2]"}
// Simulation options: startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Modelica.Media.Examples.TestOnly.MixIdealGasAir', options = '', outputFormat = 'mat', variableFilter = 'time|medium.p|medium.T|medium2.p|medium2.T|medium2.X.1.|medium2.X.2.', cflags = '', simflags = ' -abortSlowSimulation -alarm=360 -emit_protected'
// Result file: Modelica.Media.Examples.TestOnly.MixIdealGasAir_res.mat
// Files Equal!
// Warning: Alias set with different nominal values
//  * candidate: medium.state.p(nominal = 1000000.0)
//  * candidate: medium.p(nominal = 100000.0)
// => select value from medium.p(nominal = 100000.0) for variable: medium.p
// Warning: Alias set with different nominal values
//  * candidate: medium2.state.p(nominal = 1000000.0)
//  * candidate: medium2.p(nominal = 100000.0)
// => select value from medium2.p(nominal = 100000.0) for variable: medium2.p
//
// "true
// "
// ""
// endResult
