// name:     TestMedia.TestModels.WaterIF97.Test6.mos [simulation checking]
// keywords: simulation TestMedia.TestModels.WaterIF97.Test6
// status: correct
// teardown_command: rm -rf _TestMedia.TestModels.WaterIF97.Test6.* TestMedia.TestModels.WaterIF97.Test6_* TestMedia.TestModels.WaterIF97.Test6 TestMedia.TestModels.WaterIF97.Test6.exe TestMedia.TestModels.WaterIF97.Test6.cpp TestMedia.TestModels.WaterIF97.Test6.makefile TestMedia.TestModels.WaterIF97.Test6.libs TestMedia.TestModels.WaterIF97.Test6.log TestMedia.TestModels.WaterIF97.Test6.c TestMedia.TestModels.WaterIF97.Test6.o output.log
//
// Simulation Results
// Modelica Standard Library
//

loadModel(Modelica,{"3.1"}); getErrorString();
loadFile("TestMedia.mo"); getErrorString();


simulate(TestMedia.TestModels.WaterIF97.Test6, numberOfIntervals=200, stopTime=1.0); getErrorString();

res := OpenModelica.Scripting.compareSimulationResults("TestMedia.TestModels.WaterIF97.Test6_res.mat",
  "ReferenceFiles/WaterIF97/WaterIF97_Test6_ref.mat","TestMedia.TestModels.WaterIF97.Test6_diff.csv",0.01,0.013,
  {"medium1.baseProperties.T","medium1.baseProperties.d","medium2.baseProperties.T","medium2.baseProperties.d"});


// Result:
// true
// ""
// true
// ""
// record SimulationResult
//     resultFile = "TestMedia.TestModels.WaterIF97.Test6_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 200, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'TestMedia.TestModels.WaterIF97.Test6', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// "Warning: Alias set with different nominal values
//  * candidate: medium1.completeState.state.h(nominal = 500000.0)
//  * candidate: medium1.baseProperties.state.h(nominal = 500000.0)
//  * candidate: medium1.baseProperties.h(nominal = 1000000.0)
//  * candidate: h1(nominal = 500000.0)
// => select value from h1(nominal = 500000.0) for variable: h1
// Warning: Alias set with several free start values
//  * candidate: p2(start = 5000000.0)
//  * candidate: medium2.baseProperties.state.p(start = 5000000.0)
//  * candidate: medium2.completeState.state.p(start = 5000000.0)
//  * candidate: medium2.baseProperties.sat.psat(start = 100000.0)
// => select value from p2(start = 5000000.0) for variable: p2
// Warning: Alias set with different nominal values
//  * candidate: medium2.baseProperties.sat.psat(nominal = 1000000.0)
//  * candidate: medium2.completeState.state.p(nominal = 1000000.0)
//  * candidate: medium2.baseProperties.state.p(nominal = 1000000.0)
//  * candidate: medium2.baseProperties.p(nominal = 100000.0)
//  * candidate: p2(nominal = 1000000.0)
// => select value from p2(nominal = 1000000.0) for variable: p2
// "
// {"Files Equal!"}
// endResult
