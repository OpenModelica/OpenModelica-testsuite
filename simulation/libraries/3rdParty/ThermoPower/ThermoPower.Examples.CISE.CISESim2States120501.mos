// name: ThermoPower.Examples.CISE.CISESim2States120501
// keywords: over-determined initialization
// status: correct

// Test1
loadModel(ThermoPower); getErrorString();
simulate(ThermoPower.Examples.CISE.CISESim2States120501); getErrorString();

// Result:
// true
// ""
// record SimulationResult
//     resultFile = "ThermoPower.Examples.CISE.CISESim2States120501_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1200.0, numberOfIntervals = 1000, tolerance = 1e-07, method = 'dassl', fileNamePrefix = 'ThermoPower.Examples.CISE.CISESim2States120501', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// "Warning: Alias set with several free start values
//  * candidate: Plant.Pipe2Valve.heatTransfer.Tw[1](start = 500.0)
//  * candidate: Plant.Pipe2ValveWall.int.T[1](start = Plant.Pipe2ValveWall.Tvolstart[1])
// => select value from Plant.Pipe2Valve.heatTransfer.Tw[1](start = 500.0) for variable: Plant.Pipe2Valve.heatTransfer.Tw[1]
// Warning: Alias set with different nominal values
//  * candidate: Plant.Pipe2ValveWall.int.T[1](nominal = 300.0)
//  * candidate: Plant.Pipe2Valve.wall.T[1](nominal = 300.0)
//  * candidate: Plant.Pipe2Valve.heatTransfer.wall.T[1](nominal = 300.0)
//  * candidate: Plant.Pipe2Valve.heatTransfer.Tw[1](nominal = 500.0)
// => select value from Plant.Pipe2Valve.heatTransfer.Tw[1](nominal = 500.0) for variable: Plant.Pipe2Valve.heatTransfer.Tw[1]
// Warning: Alias set with several free start values
//  * candidate: Plant.SH.heatTransfer.Tw[4](start = 500.0)
//  * candidate: Plant.SHWall.int.T[4](start = Plant.SHWall.Tvolstart[4])
// => select value from Plant.SH.heatTransfer.Tw[4](start = 500.0) for variable: Plant.SH.heatTransfer.Tw[4]
// Warning: Alias set with different nominal values
//  * candidate: Plant.SHWall.int.T[4](nominal = 300.0)
//  * candidate: Plant.SH.wall.T[4](nominal = 300.0)
//  * candidate: Plant.SH.heatTransfer.wall.T[4](nominal = 300.0)
//  * candidate: Plant.SH.heatTransfer.Tw[4](nominal = 500.0)
// => select value from Plant.SH.heatTransfer.Tw[4](nominal = 500.0) for variable: Plant.SH.heatTransfer.Tw[4]
// Warning: Alias set with several free start values
//  * candidate: Plant.SH.heatTransfer.Tw[3](start = 500.0)
//  * candidate: Plant.SHWall.int.T[3](start = Plant.SHWall.Tvolstart[3])
// => select value from Plant.SH.heatTransfer.Tw[3](start = 500.0) for variable: Plant.SH.heatTransfer.Tw[3]
// Warning: Alias set with different nominal values
//  * candidate: Plant.SHWall.int.T[3](nominal = 300.0)
//  * candidate: Plant.SH.wall.T[3](nominal = 300.0)
//  * candidate: Plant.SH.heatTransfer.wall.T[3](nominal = 300.0)
//  * candidate: Plant.SH.heatTransfer.Tw[3](nominal = 500.0)
// => select value from Plant.SH.heatTransfer.Tw[3](nominal = 500.0) for variable: Plant.SH.heatTransfer.Tw[3]
// Warning: Alias set with several free start values
//  * candidate: Plant.SH.heatTransfer.Tw[2](start = 500.0)
//  * candidate: Plant.SHWall.int.T[2](start = Plant.SHWall.Tvolstart[2])
// => select value from Plant.SH.heatTransfer.Tw[2](start = 500.0) for variable: Plant.SH.heatTransfer.Tw[2]
// Warning: Alias set with different nominal values
//  * candidate: Plant.SHWall.int.T[2](nominal = 300.0)
//  * candidate: Plant.SH.wall.T[2](nominal = 300.0)
//  * candidate: Plant.SH.heatTransfer.wall.T[2](nominal = 300.0)
//  * candidate: Plant.SH.heatTransfer.Tw[2](nominal = 500.0)
// => select value from Plant.SH.heatTransfer.Tw[2](nominal = 500.0) for variable: Plant.SH.heatTransfer.Tw[2]
// Warning: Alias set with several free start values
//  * candidate: Plant.SH.heatTransfer.Tw[1](start = 500.0)
//  * candidate: Plant.SHWall.int.T[1](start = Plant.SHWall.Tvolstart[1])
// => select value from Plant.SH.heatTransfer.Tw[1](start = 500.0) for variable: Plant.SH.heatTransfer.Tw[1]
// Warning: Alias set with different nominal values
//  * candidate: Plant.SHWall.int.T[1](nominal = 300.0)
//  * candidate: Plant.SH.wall.T[1](nominal = 300.0)
//  * candidate: Plant.SH.heatTransfer.wall.T[1](nominal = 300.0)
//  * candidate: Plant.SH.heatTransfer.Tw[1](nominal = 500.0)
// => select value from Plant.SH.heatTransfer.Tw[1](nominal = 500.0) for variable: Plant.SH.heatTransfer.Tw[1]
// Warning: Alias set with several free start values
//  * candidate: Plant.Pipe2SH.heatTransfer.Tw[1](start = 500.0)
//  * candidate: Plant.Pipe2SHWall.int.T[1](start = Plant.Pipe2SHWall.Tvolstart[1])
// => select value from Plant.Pipe2SH.heatTransfer.Tw[1](start = 500.0) for variable: Plant.Pipe2SH.heatTransfer.Tw[1]
// Warning: Alias set with different nominal values
//  * candidate: Plant.Pipe2SHWall.int.T[1](nominal = 300.0)
//  * candidate: Plant.Pipe2SH.wall.T[1](nominal = 300.0)
//  * candidate: Plant.Pipe2SH.heatTransfer.wall.T[1](nominal = 300.0)
//  * candidate: Plant.Pipe2SH.heatTransfer.Tw[1](nominal = 500.0)
// => select value from Plant.Pipe2SH.heatTransfer.Tw[1](nominal = 500.0) for variable: Plant.Pipe2SH.heatTransfer.Tw[1]
// Warning: Alias set with several free start values
//  * candidate: Plant.DrumBoiler.p(start = Plant.DrumBoiler.pstart)
//  * candidate: Plant.DrumBoiler.sat.psat(start = 5000000.0)
//  * candidate: Plant.DrumBoiler.steam.p(start = 5000000.0)
//  * candidate: Plant.Pipe2SH.infl.p(start = 5000000.0)
//  * candidate: Plant.DrumBoiler.feed.p(start = 5000000.0)
//  * candidate: Plant.FeedWater.flange.p(start = 5000000.0)
// => select value from Plant.DrumBoiler.p(start = Plant.DrumBoiler.pstart) for variable: Plant.DrumBoiler.p
// Warning: Alias set with several free start values
//  * candidate: Plant.Valve.p(start = 5000000.0)
//  * candidate: Plant.Valve.inlet.p(start = Plant.Valve.pin_start)
//  * candidate: Plant.Pipe2Valve.outfl.p(start = 5000000.0)
//  * candidate: Plant.Valve.fluidState.p(start = Plant.Valve.pin_start)
// => select value from Plant.Valve.p(start = 5000000.0) for variable: Plant.Valve.p
// Warning: Alias set with several free start values
//  * candidate: Plant.Pipe2Valve.p(start = Plant.Pipe2Valve.pstart)
//  * candidate: Plant.Pipe2Valve.infl.p(start = 5000000.0)
//  * candidate: Plant.SH.outfl.p(start = 5000000.0)
//  * candidate: Plant.SH.fluidState[5].p(start = 5000000.0)
//  * candidate: Plant.SH.heatTransfer.fluidState[5].p(start = 5000000.0)
//  * candidate: Plant.SH.fluidState[4].p(start = 5000000.0)
//  * candidate: Plant.SH.heatTransfer.fluidState[4].p(start = 5000000.0)
//  * candidate: Plant.SH.fluidState[3].p(start = 5000000.0)
//  * candidate: Plant.SH.heatTransfer.fluidState[3].p(start = 5000000.0)
//  * candidate: Plant.SH.fluidState[2].p(start = 5000000.0)
//  * candidate: Plant.SH.heatTransfer.fluidState[2].p(start = 5000000.0)
//  * candidate: Plant.SH.fluidState[1].p(start = 5000000.0)
//  * candidate: Plant.SH.heatTransfer.fluidState[1].p(start = 5000000.0)
//  * candidate: Plant.SH.heatTransfer.p(start = 5000000.0)
//  * candidate: Plant.Pipe2Valve.fluidState[2].p(start = 5000000.0)
//  * candidate: Plant.Pipe2Valve.heatTransfer.fluidState[2].p(start = 5000000.0)
//  * candidate: Plant.Pipe2Valve.fluidState[1].p(start = 5000000.0)
//  * candidate: Plant.Pipe2Valve.heatTransfer.fluidState[1].p(start = 5000000.0)
// => select value from Plant.Pipe2Valve.p(start = Plant.Pipe2Valve.pstart) for variable: Plant.Pipe2Valve.p
// Warning: Alias set with several free start values
//  * candidate: Plant.Pipe2SH.p(start = Plant.Pipe2SH.pstart)
//  * candidate: Plant.Pipe2SH.outfl.p(start = 5000000.0)
//  * candidate: Plant.SH.infl.p(start = 5000000.0)
//  * candidate: Plant.Pipe2SH.fluidState[2].p(start = 5000000.0)
//  * candidate: Plant.Pipe2SH.heatTransfer.fluidState[2].p(start = 5000000.0)
//  * candidate: Plant.Pipe2SH.fluidState[1].p(start = 5000000.0)
//  * candidate: Plant.Pipe2SH.heatTransfer.fluidState[1].p(start = 5000000.0)
// => select value from Plant.Pipe2SH.p(start = Plant.Pipe2SH.pstart) for variable: Plant.Pipe2SH.p
// Warning: Alias set with different nominal values
//  * candidate: Plant.DrumBoiler.sat.Tsat(nominal = 500.0)
//  * candidate: Plant.RisersHeat.port.T(nominal = 300.0)
//  * candidate: Plant.DrumBoiler.heat.T(nominal = 300.0)
//  * candidate: Plant.DrumBoiler.Ts(nominal = 500.0)
// => select value from Plant.DrumBoiler.Ts(nominal = 500.0) for variable: Plant.DrumBoiler.Ts
// Warning: Alias set with several free start values
//  * candidate: Plant.Valve.inlet.m_flow(start = Plant.Valve.wnom)
//  * candidate: Plant.Pipe2Valve.outfl.m_flow(start = Plant.Pipe2Valve.wnom)
//  * candidate: Plant.Valve.outlet.m_flow(start = Plant.Valve.wnom)
// => select value from Plant.Valve.inlet.m_flow(start = Plant.Valve.wnom) for variable: Plant.Valve.w
// Warning: Alias set with several free start values
//  * candidate: Plant.Pipe2SH.h[1](start = Plant.Pipe2SH.hstart[1])
//  * candidate: Plant.DrumBoiler.steam.h_outflow(start = 100000.0)
//  * candidate: Plant.DrumBoiler.hv(start = 100000.0)
//  * candidate: Plant.Pipe2SH.fluidState[1].h(start = 100000.0)
//  * candidate: Plant.Pipe2SH.heatTransfer.fluidState[1].h(start = 100000.0)
// => select value from Plant.Pipe2SH.h[1](start = Plant.Pipe2SH.hstart[1]) for variable: Plant.Pipe2SH.h[1]
// Warning: Alias set with several free start values
//  * candidate: Plant.Pipe2Valve.htilde[1](start = Plant.Pipe2Valve.hstart[2])
//  * candidate: Plant.Pipe2Valve.h[2](start = Plant.Pipe2Valve.hstart[2])
//  * candidate: Plant.Pipe2Valve.fluidState[2].h(start = 100000.0)
//  * candidate: Plant.Pipe2Valve.heatTransfer.fluidState[2].h(start = 100000.0)
//  * candidate: Plant.Pipe2Valve.outfl.h_outflow(start = Plant.Pipe2Valve.hstartout)
//  * candidate: Plant.Valve.outlet.h_outflow(start = 100000.0)
//  * candidate: Plant.Valve.inlet.h_outflow(start = 100000.0)
//  * candidate: Plant.Valve.fluidState.h(start = 100000.0)
//  * candidate: Plant.Pipe2Valve.infl.h_outflow(start = Plant.Pipe2Valve.hstartin)
// => select value from Plant.Pipe2Valve.htilde[1](start = Plant.Pipe2Valve.hstart[2]) for variable: Plant.Pipe2Valve.htilde[1]
// Warning: Alias set with different nominal values
//  * candidate: Plant.Valve.fluidState.d(nominal = 500.0)
//  * candidate: Plant.Valve.rho(nominal = 1000.0)
// => select value from Plant.Valve.rho(nominal = 1000.0) for variable: Plant.Valve.rho
// Warning: Alias set with several free start values
//  * candidate: Plant.SH.htilde[4](start = Plant.SH.hstart[5])
//  * candidate: Plant.SH.h[5](start = Plant.SH.hstart[5])
//  * candidate: Plant.SH.fluidState[5].h(start = 100000.0)
//  * candidate: Plant.SH.heatTransfer.fluidState[5].h(start = 100000.0)
//  * candidate: Plant.SH.heatTransfer.h[5](start = 100000.0)
//  * candidate: Plant.SH.outfl.h_outflow(start = Plant.SH.hstartout)
//  * candidate: Plant.Pipe2Valve.h[1](start = Plant.Pipe2Valve.hstart[1])
//  * candidate: Plant.Pipe2Valve.fluidState[1].h(start = 100000.0)
//  * candidate: Plant.Pipe2Valve.heatTransfer.fluidState[1].h(start = 100000.0)
// => select value from Plant.SH.htilde[4](start = Plant.SH.hstart[5]) for variable: Plant.SH.htilde[4]
// Warning: Alias set with several free start values
//  * candidate: Plant.SH.htilde[3](start = Plant.SH.hstart[4])
//  * candidate: Plant.SH.h[4](start = Plant.SH.hstart[4])
//  * candidate: Plant.SH.fluidState[4].h(start = 100000.0)
//  * candidate: Plant.SH.heatTransfer.fluidState[4].h(start = 100000.0)
//  * candidate: Plant.SH.heatTransfer.h[4](start = 100000.0)
// => select value from Plant.SH.htilde[3](start = Plant.SH.hstart[4]) for variable: Plant.SH.htilde[3]
// Warning: Alias set with several free start values
//  * candidate: Plant.SH.htilde[2](start = Plant.SH.hstart[3])
//  * candidate: Plant.SH.h[3](start = Plant.SH.hstart[3])
//  * candidate: Plant.SH.fluidState[3].h(start = 100000.0)
//  * candidate: Plant.SH.heatTransfer.fluidState[3].h(start = 100000.0)
//  * candidate: Plant.SH.heatTransfer.h[3](start = 100000.0)
// => select value from Plant.SH.htilde[2](start = Plant.SH.hstart[3]) for variable: Plant.SH.htilde[2]
// Warning: Alias set with several free start values
//  * candidate: Plant.SH.htilde[1](start = Plant.SH.hstart[2])
//  * candidate: Plant.SH.h[2](start = Plant.SH.hstart[2])
//  * candidate: Plant.SH.fluidState[2].h(start = 100000.0)
//  * candidate: Plant.SH.heatTransfer.fluidState[2].h(start = 100000.0)
//  * candidate: Plant.SH.heatTransfer.h[2](start = 100000.0)
//  * candidate: Plant.SH.infl.h_outflow(start = Plant.SH.hstartin)
// => select value from Plant.SH.htilde[1](start = Plant.SH.hstart[2]) for variable: Plant.SH.htilde[1]
// Warning: Alias set with several free start values
//  * candidate: Plant.Pipe2SH.htilde[1](start = Plant.Pipe2SH.hstart[2])
//  * candidate: Plant.Pipe2SH.h[2](start = Plant.Pipe2SH.hstart[2])
//  * candidate: Plant.Pipe2SH.fluidState[2].h(start = 100000.0)
//  * candidate: Plant.Pipe2SH.heatTransfer.fluidState[2].h(start = 100000.0)
//  * candidate: Plant.Pipe2SH.outfl.h_outflow(start = Plant.Pipe2SH.hstartout)
//  * candidate: Plant.SH.h[1](start = Plant.SH.hstart[1])
//  * candidate: Plant.SH.fluidState[1].h(start = 100000.0)
//  * candidate: Plant.SH.heatTransfer.fluidState[1].h(start = 100000.0)
//  * candidate: Plant.SH.heatTransfer.h[1](start = 100000.0)
//  * candidate: Plant.Pipe2SH.infl.h_outflow(start = Plant.Pipe2SH.hstartin)
// => select value from Plant.Pipe2SH.htilde[1](start = Plant.Pipe2SH.hstart[2]) for variable: Plant.Pipe2SH.htilde[1]
// Notification: The following equation is consistent and got removed from the initialization problem: $DER.Plant.Pipe2Valve.p = 0.0
// Warning: The initial conditions are over specified. Use +d=initialization for more information.
// Warning: There are iteration variables with default zero start attribute. Use +d=initialization for more information.
// Warning: Alias set with several free start values
//  * candidate: Plant.Pipe2Valve.p(start = Plant.Pipe2Valve.pstart)
//  * candidate: Plant.SH.p(start = Plant.SH.pstart)
// => select value from Plant.Pipe2Valve.p(start = Plant.Pipe2Valve.pstart) for variable: Plant.Pipe2Valve.p
// "
// endResult
