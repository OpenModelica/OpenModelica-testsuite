// name:     Test3PhaseInitOver
// keywords: initialization, overdetermined, additial equations.
// status:   correct
// cflags:   +std=2.x
// teardown_command: rm -f Test3Phase.Test3Phase* output.log
//  Simulate models and read in data.
//

loadFile("InitTest3Phase.mo");

simulate(Test3Phase.Test3PhaseInitOver,stopTime=10, tolerance=1e-5, numberOfIntervals=1000, simflags="-emit_protected"); getErrorString();

"i_abc[:] at 0.0";
val(i_abc[1],0.0);
val(i_abc[2],0.0);
val(i_abc[3],0.0);

"i_dq0[:] at 0.0";
val(i_dq0[1],0.0);
val(i_dq0[2],0.0);
val(i_dq0[3],0.0);

"i_abc[:] at 10.0";
val(i_abc[1],10.0);
val(i_abc[2],10.0);
val(i_abc[3],10.0);

"i_dq0[:] at 10.0:";
val(i_dq0[1],10.0);
val(i_dq0[2],10.0);
val(i_dq0[3],10.0);

"u_abc[:] at 0.0";
val(u_abc[1],0.0);
val(u_abc[2],0.0);
val(u_abc[3],0.0);

"u_dq0[:] at 0.0";
val(u_dq0[1],0.0);
val(u_dq0[2],0.0);
val(u_dq0[3],0.0);

"u_abc[:] at 10.0";
val(u_abc[1],10.0);
val(u_abc[2],10.0);
val(u_abc[3],10.0);

"u_dq0[:] at 10.0:";
val(u_dq0[1],10.0);
val(u_dq0[2],10.0);
val(u_dq0[3],10.0);

"power :";
val(power,0);
val(power,10);

// Result:
// true
// record SimulationResult
//     resultFile = "Test3Phase.Test3PhaseInitOver_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 10.0, numberOfIntervals = 1000, tolerance = 1e-05, method = 'dassl', fileNamePrefix = 'Test3Phase.Test3PhaseInitOver', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-emit_protected'",
//     messages = ""
// end SimulationResult;
// "Notification: It was not possible to analyze the given system symbolically, because the relevant equations are part of an algebraic loop. This is not supported yet.
// Warning: The initial conditions are over specified. Use +d=initialization for more information.
// Warning: There are iteration variables with default zero start attribute. Use +d=initialization for more information.
// "
// "i_abc[:] at 0.0"
// 0.2989213705568485
// -0.2237355800979949
// -0.0751857904588543
// "i_dq0[:] at 0.0"
// -0.1050405635976715
// 0.3661024155388451
// -3.525431591703201e-16
// "i_abc[:] at 10.0"
// 0.29892100029071
// -0.2237375081236068
// -0.07518349216710032
// "i_dq0[:] at 10.0:"
// -0.1050435520553416
// 0.3661019620572893
// 1.666567661532422e-15
// "u_abc[:] at 0.0"
// 4.221253245304347e-10
// 0.8660254035733758
// -0.8660254039955011
// "u_dq0[:] at 0.0"
// 1.224744871391589
// 5.169959772423462e-10
// -5.863893248217344e-18
// "u_abc[:] at 10.0"
// 4.221238845941196e-10
// 0.8660254035733744
// -0.8660254039955017
// "u_dq0[:] at 10.0:"
// 1.224744871391588
// 5.170029061673479e-10
// -1.926890368010378e-15
// "power :"
// -0.1286478913650567
// -0.1286515514632591
// endResult
