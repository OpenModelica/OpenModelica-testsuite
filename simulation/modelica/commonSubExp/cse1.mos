// name: cse1
// keywords: cse
// status: correct

loadString("
model Tearing15
  \"System to test unsolvables as tVars in Cellier Algorithm\"
  Real source;
  Real v1(start=7);
  Real v2(start=1);
  Real v3(start=1);
  Real v4(start=1);
  Real v5(start=1);
  Real v6(start=50);
  Real v7(start=3);

equation
  source = sin(time);
  v1*sin(v1) + v2 - 4  + source = 0;
  2*v1*sin(v1) + v2 - v3 - source +v7= 0;
  3*v1*sin(v1) - 7*v2 - 2*v3 + 3 * source *v7= 0;
  v1* sin(v1) + v2+source -v3*source -v7= 0;
  3*v2 - v4 - v5 + 2 - source/2 *v7 = 0;
  v5 + v6*sin(v6) * source +v3 = 0;
  3*v5 - v6*sin(v6) - source = 0;
end Tearing15;
"); getErrorString();

setDebugFlags("dumpCSE"); getErrorString();
setTearingMethod("cellier"); getErrorString();
setCommandLineOptions("+tearingHeuristic=MC1 +cseCall +cseBinary"); getErrorString();
simulate(Tearing15); getErrorString();

// Result:
// true
// ""
// true
// ""
// true
// ""
// true
// ""
//
// ########### Updated Variable List ########### (11)
// ========================================
// 1: v7:VARIABLE(start = 3.0 ) .Tearing15, .Real type: Real []
// 2: v6:VARIABLE(start = 50.0 ) .Tearing15, .Real type: Real []
// 3: v5:VARIABLE(start = 1.0 ) .Tearing15, .Real type: Real []
// 4: v4:VARIABLE(start = 1.0 ) .Tearing15, .Real type: Real []
// 5: v3:VARIABLE(start = 1.0 ) .Tearing15, .Real type: Real []
// 6: v2:VARIABLE(start = 1.0 ) .Tearing15, .Real type: Real []
// 7: v1:VARIABLE(start = 7.0 ) .Tearing15, .Real type: Real []
// 8: source:VARIABLE() .Tearing15, .Real type: Real []
// 9: $cse35:VARIABLE()  type: Real []
// 10: $cse19:VARIABLE()  type: Real []
// 11: $cse4:VARIABLE()  type: Real []
//
//
// ########### Updated Equation List ########### (11, 11)
// ========================================
// 1/1 (1): source = sin(time)    [dynamic]
// 2/2 (1): -4.0 + $cse4 + v2 + source = 0.0    [dynamic]
// 3/3 (1): 2.0 * $cse4 + v2 + v7 + (-source) - v3 = 0.0    [dynamic]
// 4/4 (1): 3.0 * $cse4 + -7.0 * v2 + -2.0 * v3 + 3.0 * $cse19 = 0.0    [dynamic]
// 5/5 (1): $cse4 + v2 + source + (-v3) * source - v7 = 0.0    [dynamic]
// 6/6 (1): 2.0 + 3.0 * v2 + -0.5 * $cse19 + (-v5) - v4 = 0.0    [dynamic]
// 7/7 (1): v5 + v6 * $cse35 * source + v3 = 0.0    [dynamic]
// 8/8 (1): 3.0 * v5 + (-v6) * $cse35 - source = 0.0    [dynamic]
// 9/9 (1): $cse35 = sin(v6)    [binding]
// 10/10 (1): $cse19 = source * v7    [binding]
// 11/11 (1): $cse4 = v1 * sin(v1)    [binding]
//
// record SimulationResult
//     resultFile = "Tearing15_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'Tearing15', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// ""
// endResult
