// name: wrapFunctionCalls13
// keywords: cse, wrapFunctionCalls
// status: correct

loadString("
package CSE
  model wrapFunctionCalls13
    record data
      Integer d1;
      Integer d2;
    end data;
    
    function f1
      input Integer x1;
      input Integer x2;
      input Integer x;
      output Real y;
    algorithm
      y := x1 + x2 + x;
    end f1;
    
    function f2
      input Integer a;
      input Integer b;
      output data dataOut;
    algorithm
      dataOut.d1 := a;
      dataOut.d2 := b;
    end f2;

    data dat;
    parameter Integer p1 = 5;
    Integer x;
  equation
    dat = f2(p1, 2*p1);
    f1(x, p1, 2*p1) = f1(dat.d1, p1, 2*p1);
  end wrapFunctionCalls13;
end CSE;
"); getErrorString();

setCommandLineOptions("--preOptModules-=clockPartitioning -d=dumpCSE,dumpindxdae,paramdlowdump"); getErrorString();
simulate(CSE.wrapFunctionCalls13); getErrorString();

res := OpenModelica.Scripting.compareSimulationResults("CSE.wrapFunctionCalls13_res.mat", "./ReferenceFiles/CSE.wrapFunctionCalls13_res.mat", "CSE.wrapFunctionCalls13_diff.csv", 0.01, 0.0001); getErrorString();
for v in res[2:size(res,1)] loop
  curFile := "CSE.wrapFunctionCalls13." + v + ".html";
  success := writeFile(curFile, OpenModelica.Scripting.diffSimulationResultsHtml(v, "CSE.wrapFunctionCalls13_res.mat", "./ReferenceFiles/CSE.wrapFunctionCalls13_res.mat", 0.01)); getErrorString();
end for; getErrorString();

// Result:
// true
// ""
// true
// ""
//
//
//
// ###############################################################
// Final Results
// ###############################################################
//
// ########### Updated Variable List (simulation) (2)
// ========================================
// 1: x:DISCRETE()  type: Integer 
// 2: $cse1:VARIABLE()  type: Real  unreplaceable
//
//
// ########### Updated Equation List (simulation) (2, 2)
// ========================================
// 1/1 (1): $cse1 = $cse2   [dynamic]
// 2/2 (1): $cse1 = CSE.wrapFunctionCalls13.f1(x, p1, 2 * p1)   [unknown]
//
//
// ########### Updated globalKnownVars (simulation) (4)
// ========================================
// 1: p1:PARAM()  = 5  type: Integer 
// 2: dat.d2 in dat:DISCRETE()  = CSE.wrapFunctionCalls13.f2(p1, 2 * p1)  type: Integer 
// 3: dat.d1 in dat:DISCRETE()  = CSE.wrapFunctionCalls13.f2(p1, 2 * p1)  type: Integer 
// 4: $cse2:VARIABLE()  = CSE.wrapFunctionCalls13.f1(dat.d1, p1, 2 * p1)  type: Real  unreplaceable
//
//
// ########### CSE Replacements (3/45)
// ========================================
// 1: dat - CSE.wrapFunctionCalls13.f2(p1, 2 * p1) - {}
// 2: $cse1 - CSE.wrapFunctionCalls13.f1(x, p1, 2 * p1) - {}
// 3: $cse2 - CSE.wrapFunctionCalls13.f1(dat.d1, p1, 2 * p1) - {}
//
// ########################################
// dumpindxdae
// ########################################
//
//
// unknown partition
// ========================================
//
// Variables (2)
// ========================================
// 1: x:DISCRETE()  type: Integer 
// 2: $cse1:VARIABLE()  type: Real  unreplaceable
//
//
// Equations (2, 2)
// ========================================
// 1/1 (1): $cse1 = $cse2   [dynamic]
// 2/2 (1): x = $cse1 - CSE.wrapFunctionCalls13.f1(0.0, p1, 2 * p1)   [unknown]
//
//
// Simple Equations (0, 0)
// ========================================
//
//
// State Sets
// ========================================
//
//
// Matching
// ========================================
// 2 variables and equations
// var 1 is solved in eqn 2
// var 2 is solved in eqn 1
//
//
// StrongComponents
// ========================================
// {1:2}
// {2:1}
//
//
//
// BackendDAEType: simulation
//
//
// Known variables only depending on parameters and constants - globalKnownVars (4)
// ========================================
// 1: p1:PARAM()  = 5  type: Integer 
// 2: dat.d1 in dat:DISCRETE()  = CSE.wrapFunctionCalls13.f2(p1, 2 * p1)  type: Integer 
// 3: $cse2:VARIABLE()  = CSE.wrapFunctionCalls13.f1(dat.d1, p1, 2 * p1)  type: Real  unreplaceable
// 4: dat.d2 in dat:DISCRETE()  = CSE.wrapFunctionCalls13.f2(p1, 2 * p1)  type: Integer 
//
//
// Known variables only depending on states and inputs - localKnownVars (0)
// ========================================
//
//
// External Objects (0)
// ========================================
//
//
// Classes of External Objects (0)
// ========================================
//
//
// Alias Variables (0)
// ========================================
//
//
// Simple Shared Equations (0, 0)
// ========================================
//
//
// Initial Equations (0, 0)
// ========================================
//
//
// Zero Crossings (0)
// ========================================
//
//
// Relations (0)
// ========================================
//
//
// Time Events (0)
// ========================================
//
//
// Constraints (0)
// ========================================
//
//
// Base partitions (0)
// ========================================
//
//
// Sub partitions (0)
// ========================================
//
//
//
// parameters in order (2)
// ========================================
// 5:   dat := CSE.wrapFunctionCalls13.f2(p1, 2 * p1);
// 	
// 6: $cse2=CSE.wrapFunctionCalls13.f1(dat.d1, p1, 2 * p1) [Real ]
//
// record SimulationResult
//     resultFile = "CSE.wrapFunctionCalls13_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'CSE.wrapFunctionCalls13', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// ""
// {"Files Equal!"}
// ""
//
// ""
// endResult
