// name: wrapFunctionCalls8
// keywords: cse, wrapFunctionCalls
// status: correct

loadString("
package CSE
  model wrapFunctionCalls8
    function f1
      input Real x1;
      input Real x2;
      output Real y1;
      output Real y2;
      output Real y3;
    algorithm
      y1 := x1;
      y2 := y1 + x2;
      y1 := y2+1.0;
      y2 := x1 * y2;
      y3 := x2*x1;
    end f1;

  	parameter Real p1 = 5;
    Real x, a, b, c, d;
  equation
    x = sin(cos(p1));
    c = sin(f1(x, sin(cos(p1)))) + 5;
    // x = sin(cos(time));
    // c = sin(f1(x, sin(cos(time)))) + 5;
    (,b,) = f1(x, x);
    a = sin(x);
    d = f1(x, x);
  end wrapFunctionCalls8;
end CSE;
"); getErrorString();

setCommandLineOptions("--preOptModules-=clockPartitioning -d=dumpCSE"); getErrorString();
simulate(CSE.wrapFunctionCalls8); getErrorString();

res := OpenModelica.Scripting.compareSimulationResults("CSE.wrapFunctionCalls8_res.mat", "./ReferenceFiles/CSE.wrapFunctionCalls8_res.mat", "CSE.wrapFunctionCalls8_diff.csv", 0.01, 0.0001); getErrorString();
for v in res[2:size(res,1)] loop
  curFile := "CSE.wrapFunctionCalls8." + v + ".html";
  success := writeFile(curFile, OpenModelica.Scripting.diffSimulationResultsHtml(v, "CSE.wrapFunctionCalls8_res.mat", "./ReferenceFiles/CSE.wrapFunctionCalls8_res.mat", 0.01)); getErrorString();
end for; getErrorString();

// Result:
// true
// ""
// true
// ""
//
//
//
// ###############################################################
// Final Results
// ###############################################################
//
// ########### Updated Variable List (simulation) (1)
// ========================================
// 1: c:VARIABLE()  type: Real 
//
//
// ########### Updated Equation List (simulation) (1, 1)
// ========================================
// 1/1 (1): c = 5.0 + $cse2   [dynamic]
//
//
// ########### Updated globalKnownVars (simulation) (8)
// ========================================
// 1: x:VARIABLE()  = sin($cse1)  type: Real 
// 2: p1:PARAM()  = 5.0  type: Real 
// 3: $cse1:VARIABLE()  = cos(p1)  type: Real  unreplaceable
// 4: $cse2:VARIABLE()  = sin(d)  type: Real  unreplaceable
// 5: $cse3:VARIABLE()  = d  type: Real  unreplaceable
// 6: b in (d, b, _):VARIABLE()  = CSE.wrapFunctionCalls8.f1(x, x)  type: Real 
// 7: d in (d, b, _):VARIABLE()  = CSE.wrapFunctionCalls8.f1(x, x)  type: Real 
// 8: a:VARIABLE()  = sin(x)  type: Real 
//
//
// ########### CSE Replacements (6/46)
// ========================================
// 1: x - sin($cse1) - {}
// 2: $cse1 - cos(p1) - {}
// 3: $cse2 - sin(d) - {}
// 4: ($cse3, _, _) - (d, b, _) - {}
// 5: (d, b, _) - CSE.wrapFunctionCalls8.f1(x, x) - {}
// 6: a - sin(x) - {}
// record SimulationResult
//     resultFile = "CSE.wrapFunctionCalls8_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'CSE.wrapFunctionCalls8', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// ""
// {"Files Equal!"}
// ""
//
// ""
// endResult
