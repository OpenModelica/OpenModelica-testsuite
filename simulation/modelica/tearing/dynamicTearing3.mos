// name:      dynamicTearing3
// keywords:  dynamic tearing
// status:    correct

loadString("
model dynamicTearing3
  Real a, x, y, z;
  parameter Real k=3, g=0;
algorithm
  a := 2*x;
equation
  g*a*x - y*y + time = 0;
  a + 2*y - k*z = 0;
  g*a - y + x*z  = 0;
end dynamicTearing3;
"); getErrorString();

setTearingMethod("cellier"); getErrorString();
setCommandLineOptions("+forceTearing"); getErrorString();
setCommandLineOptions("+dynamicTearing=nonlinear"); getErrorString();
setDebugFlags("tearingdump"); getErrorString();
simulate(dynamicTearing3,startTime=0,stopTime=2,numberOfIntervals=500); getErrorString();

// Result:
// true
// ""
// true
// ""
// true
// ""
// true
// ""
// true
// ""
//
//
//
//
// ================================================================================
// Calling Tearing for initialization!
// ================================================================================
// Handle strong component with index: 1
// To disable tearing of this component use '--noTearingForComponent=1'.
//
// Tearing of NONLINEAR component
// Use Flag '+d=tearingdumpV' for more details
//
//
// Tearing type: heuristic
//
//
// ###BEGIN print Strong Component#####################
// (Function:CellierTearing)
//
// unknown partition
// ========================================
//
// Variables (4)
// ========================================
// 1: y:VARIABLE()  type: Real 
// 2: z:VARIABLE()  type: Real 
// 3: a:VARIABLE()  type: Real 
// 4: x:VARIABLE()  type: Real 
//
//
// Equations (4, 4)
// ========================================
// 1/1 (1): algorithm
//   a := 2.0 * x;
//    [dynamic]
// 2/2 (1): g * a * x + time - y ^ 2.0 = 0.0   [dynamic]
// 3/3 (1): a + 2.0 * y - k * z = 0.0   [dynamic]
// 4/4 (1): g * a + x * z - y = 0.0   [dynamic]
//
//
// Simple Equations (0, 0)
// ========================================
//
//
// State Sets
// ========================================
//
//
// Incidence Matrix (row: equation)
// ========================================
// number of rows: 4
// 1: 3 4
// 2: 1 4 3
// 3: 2 1 3
// 4: 1 2 4 3
//
// Transposed Incidence Matrix (row: variable)
// ========================================
// number of rows: 4
// 1: 4 3 2
// 2: 4 3
// 3: 4 3 2 1
// 4: 4 2 1
//
// no matching
//
//
// ###END print Strong Component#######################
// (Function:CellierTearing)
//
//
//
//
// Determine STRICT TEARING SET
// ********************************************************************************
//
//
// AdjacencyMatrixEnhanced:
// Adjacency Matrix Enhanced (row == equation)
// ====================================
// number of rows: 4
// 1:(4,unsolvable) (3,solved) 
// 2:(3,variable(true)) (4,variable(true)) (1,nonlinear) 
// 3:(3,constone) (1,const(true)) (2,variable(true)) 
// 4:(3,variable(true)) (4,variable(true)) (2,variable(true)) (1,constone) 
//
// AdjacencyMatrixTransposedEnhanced:
// Transpose Adjacency Matrix Enhanced (row == var)
// =====================================
// number of rows: 4
// 1:(4,constone) (3,const(true)) (2,nonlinear) 
// 2:(4,variable(true)) (3,variable(true)) 
// 3:(4,variable(true)) (3,constone) (2,variable(true)) (1,solved) 
// 4:(4,variable(true)) (2,variable(true)) (1,unsolvable) 
//
// Forced selection of Tearing Variables:
// ========================================
// Unsolvables as tVars: 4,2
// Variables with annotation attribute 'always' as tVars: 
//
// Matching
// ========================================
// 4 variables and equations
// var 1 is solved in eqn 3
// var 2 is solved in eqn 8
// var 3 is solved in eqn 1
// var 4 is solved in eqn 8
//
// order: 1,3
// ========================================
//
//
// ****************************************
// * TEARING RESULTS - STRICT SET:
// * (Local Indexes)
// *
// * No of equations in strong component: 4
// * No of tVars: 2
// *
// * tVars: 2,4
// *
// * resEq: 4,2
// *
// * innerEquations ({eqn,vars}):
// * {1:3}, {3:1}
// *
// *****************************************
//
// Note:
// =====
// No dynamic Tearing for this strong component. Check if
// - flag 'dynamicTearing' is set proper
// - strong component does not contain statesets
// - system belongs to simulation
//
//
//
//
//
// ================================================================================
// Calling Tearing for simulation!
// ================================================================================
// Handle strong component with index: 2
// To disable tearing of this component use '--noTearingForComponent=2'.
//
// Tearing of NONLINEAR component
// Use Flag '+d=tearingdumpV' for more details
//
//
// Tearing type: heuristic
//
//
// ###BEGIN print Strong Component#####################
// (Function:CellierTearing)
//
// unknown partition
// ========================================
//
// Variables (4)
// ========================================
// 1: y:VARIABLE()  type: Real 
// 2: z:VARIABLE()  type: Real 
// 3: a:VARIABLE()  type: Real 
// 4: x:VARIABLE()  type: Real 
//
//
// Equations (4, 4)
// ========================================
// 1/1 (1): g * a * x + time - y ^ 2.0 = 0.0   [dynamic]
// 2/2 (1): algorithm
//   a := $_start(a);
//   a := 2.0 * x;
//    [dynamic]
// 3/3 (1): g * a + x * z - y = 0.0   [dynamic]
// 4/4 (1): a + 2.0 * y - k * z = 0.0   [dynamic]
//
//
// Simple Equations (0, 0)
// ========================================
//
//
// State Sets
// ========================================
//
//
// Incidence Matrix (row: equation)
// ========================================
// number of rows: 4
// 1: 1 4 3
// 2: 4 3
// 3: 1 2 4 3
// 4: 2 1 3
//
// Transposed Incidence Matrix (row: variable)
// ========================================
// number of rows: 4
// 1: 4 3 1
// 2: 4 3
// 3: 4 3 2 1
// 4: 3 2 1
//
// no matching
//
//
// ###END print Strong Component#######################
// (Function:CellierTearing)
//
//
//
//
// Determine STRICT TEARING SET
// ********************************************************************************
//
//
// AdjacencyMatrixEnhanced:
// Adjacency Matrix Enhanced (row == equation)
// ====================================
// number of rows: 4
// 1:(3,variable(false)) (4,variable(false)) (1,nonlinear) 
// 2:(4,unsolvable) (3,solved) 
// 3:(3,param(false)) (4,variable(true)) (2,variable(true)) (1,constone) 
// 4:(3,constone) (1,const(true)) (2,param(true)) 
//
// AdjacencyMatrixTransposedEnhanced:
// Transpose Adjacency Matrix Enhanced (row == var)
// =====================================
// number of rows: 4
// 1:(4,const(true)) (3,constone) (1,nonlinear) 
// 2:(4,param(true)) (3,variable(true)) 
// 3:(4,constone) (3,param(false)) (2,solved) (1,variable(false)) 
// 4:(3,variable(true)) (2,unsolvable) (1,variable(false)) 
//
// Forced selection of Tearing Variables:
// ========================================
// Unsolvables as tVars: 4
// Variables with annotation attribute 'always' as tVars: 
//
// Matching
// ========================================
// 4 variables and equations
// var 1 is solved in eqn 3
// var 2 is solved in eqn 8
// var 3 is solved in eqn 2
// var 4 is solved in eqn 8
//
// order: 2,3
// ========================================
//
//
// ****************************************
// * TEARING RESULTS - STRICT SET:
// * (Local Indexes)
// *
// * No of equations in strong component: 4
// * No of tVars: 2
// *
// * tVars: 4,2
// *
// * resEq: 4,1
// *
// * innerEquations ({eqn,vars}):
// * {2:3}, {3:1}
// *
// *****************************************
//
//
//
// Determine CASUAL TEARING SET
// ********************************************************************************
//
//
// AdjacencyMatrixEnhanced:
// Adjacency Matrix Enhanced (row == equation)
// ====================================
// number of rows: 4
// 1:(3,variable(false),g * x <> 0.0 (local)) (4,variable(false),g * a <> 0.0 (local)) (1,solvable) 
// 2:(4,unsolvable) (3,solved) 
// 3:(3,param(false),g <> 0.0 (global)) (4,solvable,z <> 0.0 (local)) (2,solvable,x <> 0.0 (local)) (1,solvable) 
// 4:(3,solvable) (1,solvable) (2,solvable,k <> 0.0 (global)) 
//
// AdjacencyMatrixTransposedEnhanced:
// Transpose Adjacency Matrix Enhanced (row == var)
// =====================================
// number of rows: 4
// 1:(4,solvable) (3,solvable) (1,solvable) 
// 2:(4,solvable,k <> 0.0 (global)) (3,solvable,x <> 0.0 (local)) 
// 3:(4,solvable) (3,param(false),g <> 0.0 (global)) (2,solved) (1,variable(false),g * x <> 0.0 (local)) 
// 4:(3,solvable,z <> 0.0 (local)) (2,unsolvable) (1,variable(false),g * a <> 0.0 (local)) 
//
// Matching
// ========================================
// 4 variables and equations
// var 1 is solved in eqn 1
// var 2 is solved in eqn 3
// var 3 is solved in eqn 2
// var 4 is solved in eqn 8
//
// order: 2,1,3
// ========================================
//
//
// ****************************************
// * TEARING RESULTS - CASUAL SET:
// * (Local Indexes)
// *
// * No of equations in strong component: 4
// * No of tVars: 1
// *
// * tVars: 4
// *
// * resEq: 4
// *
// * innerEquations ({eqn,vars}):
// * {2:3}, {1:1}, {3:2}
// *
// *****************************************
//
//
// Note:
// =====
// Nonlinear dynamic tearing for this strong component in model:
// dynamicTearing3
//
// record SimulationResult
//     resultFile = "dynamicTearing3_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 2.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'dynamicTearing3', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// "Warning: There are iteration variables with default zero start attribute. For more information set +d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("+d=initialization").
// "
// endResult
