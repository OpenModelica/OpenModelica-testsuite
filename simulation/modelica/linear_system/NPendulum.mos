// name:      NPendulum10
// keywords:  arrays
// status:    correct
//

loadFile("NPendulum.mo");
getErrorString();

buildModel(NPendulum.pendulum); getErrorString();
system("./NPendulum.pendulum -ls totalpivot");
res := OpenModelica.Scripting.compareSimulationResults("NPendulum.pendulum_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/linear_system/NPendulum_10.mat",
  "NPendulum_diff.csv",0.01,0.0001,
  {"phi[10]"});

system("./NPendulum.pendulum -ls lapack");
res := OpenModelica.Scripting.compareSimulationResults("NPendulum.pendulum_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/linear_system/NPendulum_10.mat",
  "NPendulum_diff.csv",0.01,0.0001,
  {"phi[10]"});

system("./NPendulum.pendulum -ls umfpack");
res := OpenModelica.Scripting.compareSimulationResults("NPendulum.pendulum_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/linear_system/NPendulum_10.mat",
  "NPendulum_diff.csv",0.01,0.0001,
  {"phi[10]"});

/*
Lis solver doesn't work here
system("./NPendulum.pendulum -ls lis");
res := OpenModelica.Scripting.compareSimulationResults("NPendulum.pendulum_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/linear_system/NPendulum_10.mat",
  "NPendulum_diff.csv",0.01,0.0001,
  {"phi[10]"});
*/
system("./NPendulum.pendulum -ls klu");
res := OpenModelica.Scripting.compareSimulationResults("NPendulum.pendulum_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/linear_system/NPendulum_10.mat",
  "NPendulum_diff.csv",0.01,0.0001,
  {"phi[10]"});


setCommandLineOptions("--maxSizeLinearTearing=0");
getErrorString();
buildModel(NPendulum.pendulum); getErrorString();

system("./NPendulum.pendulum -ls totalpivot");
res := OpenModelica.Scripting.compareSimulationResults("NPendulum.pendulum_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/linear_system/NPendulum_10.mat",
  "NPendulum_diff.csv",0.01,0.01,
  {"phi[10]"});

system("./NPendulum.pendulum -ls lapack");
res := OpenModelica.Scripting.compareSimulationResults("NPendulum.pendulum_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/linear_system/NPendulum_10.mat",
  "NPendulum_diff.csv",0.01,0.01,
  {"phi[10]"});
system("./NPendulum.pendulum -ls umfpack");
res := OpenModelica.Scripting.compareSimulationResults("NPendulum.pendulum_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/linear_system/NPendulum_10.mat",
  "NPendulum_diff.csv",0.01,0.01,
  {"phi[10]"});

system("./NPendulum.pendulum -ls lis");
res := OpenModelica.Scripting.compareSimulationResults("NPendulum.pendulum_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/linear_system/NPendulum_10.mat",
  "NPendulum_diff.csv",0.01,0.01,
  {"phi[10]"});

system("./NPendulum.pendulum -ls klu");
res := OpenModelica.Scripting.compareSimulationResults("NPendulum.pendulum_res.mat",
  getEnvironmentVar("REFERENCEFILES")+"/linear_system/NPendulum_10.mat",
  "NPendulum_diff.csv",0.01,0.01,
  {"phi[10]"});

// Result:
// true
// ""
// {"NPendulum.pendulum","NPendulum.pendulum_init.xml"}
// "Notification: Automatically loaded package Modelica 3.2.1 due to uses annotation.
// Notification: Automatically loaded package Complex 3.2.1 due to uses annotation.
// Notification: Automatically loaded package ModelicaServices 3.2.1 due to uses annotation.
// "
// 0
// {"Files Equal!"}
// 0
// {"Files Equal!"}
// 0
// {"Files Equal!"}
// 0
// {"Files Equal!"}
// true
// ""
// {"NPendulum.pendulum","NPendulum.pendulum_init.xml"}
// "Notification: Tearing is skipped for strong component 1 because system size of 102 exceeds maximum system size for tearing of linear systems (0).
// To adjust the maximum system size for tearing use --maxSizeLinearTearing=<size> and --maxSizeNonlinearTearing=<size>.
// Notification: Tearing is skipped for strong component 2 because system size of 98 exceeds maximum system size for tearing of linear systems (0).
// To adjust the maximum system size for tearing use --maxSizeLinearTearing=<size> and --maxSizeNonlinearTearing=<size>.
// "
// 0
// {"Files Equal!"}
// 0
// {"Files Equal!"}
// 0
// {"Files Equal!"}
// 0
// {"Files Equal!"}
// 0
// {"Files Equal!"}
// endResult
