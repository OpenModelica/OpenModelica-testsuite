// name: test_subSample
// keywords: synchronous features
// status: correct


// base-clock partitions #1 (clocked partition): {vd, u, u2, u3}
// sub-clock partitions #1.1: {vd, u}
// sub-clock partitions #1.2: {u2}
// sub-clock partitions #1.3: {u3}
//
// base-clock partitions #2 (continuous time partition): {f, der(x), der(v)}
// sub-clock partitions #2.1: {f, der(x), der(v)}

loadString("
model test_subSample
  parameter Real m = 1.0;
  parameter Real k = 1.0;
  parameter Real d = 0.1;
  Real x(start = 1.0, fixed = true);
  Real v(start = 0.0, fixed = true);
  Real f;
  parameter Real K = 20.0;
  parameter Real vref = 100.0;
  discrete Real vd;
  discrete Real u(start = 0.0);
  discrete Real u2, u3;
equation
  vd = sample(v, Clock(0.01));
  u = K * (vref - vd);
  f = hold(u);
  der(x) = v;
  m * der(v) = f + (-k) * x - d * v;

  u2 = subSample(u, 2);
  u3 = subSample(u2, 3);
end test_subSample;
"); getErrorString();

setCommandLineOptions("+d=dumpSynchronous"); getErrorString();
translateModel(test_subSample); getErrorString();

// Result:
// true
// ""
// true
// ""
//
// ########################################
// base-clock partitioning (2 partitions)
// ########################################
//
//
// clocked partition
// ========================================
//
// Variables (4)
// ========================================
// 1: u3:DISCRETE() .test_subSample, .Real type: Real []
// 2: u2:DISCRETE() .test_subSample, .Real type: Real []
// 3: u:DISCRETE(start = 0.0 ) .test_subSample, .Real type: Real []
// 4: vd:DISCRETE() .test_subSample, .Real type: Real []
//
//
// Equations (4, 4)
// ========================================
// 1/1 (1): vd = sample(1, v, Clock(0.01))    [dynamic, sub-partition index: 3]
// 2/2 (1): u = K * (vref - vd)    [dynamic, sub-partition index: 3]
// 3/3 (1): u2 = subSample(u, 2)    [dynamic, sub-partition index: 2]
// 4/4 (1): u3 = subSample(u2, 3)    [dynamic, sub-partition index: 1]
//
//
// State Sets
// ========================================
//
//
// no matching
//
//
// continuous time partition
// ========================================
//
// Variables (3)
// ========================================
// 1: f:VARIABLE() .test_subSample, .Real type: Real []
// 2: v:VARIABLE(start = 0.0 fixed = true ) .test_subSample, .Real type: Real []
// 3: x:VARIABLE(start = 1.0 fixed = true ) .test_subSample, .Real type: Real []
//
//
// Equations (3, 3)
// ========================================
// 1/1 (1): f = hold(u)    [dynamic, sub-partition index: 1]
// 2/2 (1): der(x) = v    [dynamic, sub-partition index: 1]
// 3/3 (1): m * der(v) = f + (-k) * x - d * v    [dynamic, sub-partition index: 1]
//
//
// State Sets
// ========================================
//
//
// no matching
//
//
// true
// ""
// endResult
