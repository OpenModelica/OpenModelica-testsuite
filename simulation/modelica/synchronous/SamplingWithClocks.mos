// name: SamplingWithClocks
// keywords: synchronous features
// status: correct
//
//  "Modelica by Example" by Michael M. Tiller
//

setCommandLineOptions("+d=dumpSynchronous"); getErrorString();

loadString("
model SamplingWithClocks \"Using clocks to sub and super sample\"
  Real x, y, z, w;
equation
  x = sample(time, Clock(0.1));
  y = sample(time, Clock(0.1));
  z = subSample(x, 2);
  w = superSample(x, 3);
end SamplingWithClocks;
"); getErrorString();

instantiateModel(SamplingWithClocks); getErrorString();
translateModel(SamplingWithClocks); getErrorString();

// Result:
// true
// ""
// true
// ""
// "class SamplingWithClocks \"Using clocks to sub and super sample\"
// Real x;
// Real y;
// Real z;
// Real w;
// equation
// x = sample(time, Clock(0.1));
// y = sample(time, Clock(0.1));
// z = subSample(x, 2);
// w = superSample(x, 3);
// end SamplingWithClocks;
// "
// ""
//
// ########################################
// base-clock partitioning (4 partitions)
// ########################################
// 
// 
// clocked partition(2, 1/1, 0/1)
// ========================================
//
// Variables (1)
// ========================================
// 1: y:VARIABLE() .SamplingWithClocks, .Real type: Real []
//
//
// Equations (1, 1)
// ========================================
// 1/1 (1): y = $getPart(time)    [dynamic]
//
//
// Simple Equations (0, 0)
// ========================================
//
//
// State Sets
// ========================================
//
//
// no matching
//
//
// clocked partition(1, 1/1, 0/1)
// ========================================
//
// Variables (1)
// ========================================
// 1: x:VARIABLE() .SamplingWithClocks, .Real type: Real []
//
//
// Equations (1, 1)
// ========================================
// 1/1 (1): x = $getPart(time)    [dynamic]
//
//
// Simple Equations (0, 0)
// ========================================
//
//
// State Sets
// ========================================
//
//
// no matching
//
//
// clocked partition(1, 1/2, 0/1)
// ========================================
//
// Variables (1)
// ========================================
// 1: z:VARIABLE() .SamplingWithClocks, .Real type: Real []
//
//
// Equations (1, 1)
// ========================================
// 1/1 (1): z = $getPart(x)    [dynamic]
//
//
// Simple Equations (0, 0)
// ========================================
//
//
// State Sets
// ========================================
//
//
// no matching
//
//
// clocked partition(1, 3/1, 0/1)
// ========================================
//
// Variables (1)
// ========================================
// 1: w:VARIABLE() .SamplingWithClocks, .Real type: Real []
//
//
// Equations (1, 1)
// ========================================
// 1/1 (1): w = $getPart(x)    [dynamic]
//
//
// Simple Equations (0, 0)
// ========================================
//
//
// State Sets
// ========================================
//
//
// no matching
//
//
//
// Base clocks (2)
// ========================================
// 1: Clock(0.1)
// 2: Clock(0.1)
//
// true
// ""
// endResult
