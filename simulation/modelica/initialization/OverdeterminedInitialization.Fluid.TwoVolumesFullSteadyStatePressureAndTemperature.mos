// name: OverdeterminedInitialization.Fluid.TwoVolumesFullSteadyStatePressureAndTemperature
// keywords: initialization, over-determined
// status: correct

loadModel(Modelica); getErrorString();
loadFile("OverdeterminedInitialization.mo"); getErrorString();

buildModel(OverdeterminedInitialization.Fluid.TwoVolumesFullSteadyStatePressureAndTemperature); getErrorString();

// Result:
// true
// ""
// true
// ""
// {"OverdeterminedInitialization.Fluid.TwoVolumesFullSteadyStatePressureAndTemperature","OverdeterminedInitialization.Fluid.TwoVolumesFullSteadyStatePressureAndTemperature_init.xml"}
// "Warning: Alias set with different nominal values
//  * candidate: source.medium.state.p(nominal = 1000000.0)
//  * candidate: source.medium.p(nominal = 100000.0)
//  * candidate: source.ports[1].p(nominal = 1000000.0)
//  * candidate: V1.ports[1].p(nominal = 1000000.0)
// => select value from V1.ports[1].p(nominal = 1000000.0) for variable: V1.ports[1].p
// Warning: Alias set with several free start values
//  * candidate: V2.ports[2].h_outflow(start = 298609.6803431054)
//  * candidate: valveLinear.port_b.h_outflow(start = 298609.6803431054)
//  * candidate: V2.medium.h(start = V2.h_start)
//  * candidate: V2.ports[1].h_outflow(start = 298609.6803431054)
// => select value from V2.ports[2].h_outflow(start = 298609.6803431054) for variable: V2.ports[2].h_outflow
// Warning: Alias set with several free start values
//  * candidate: V2.medium.p(start = V2.p_start)
//  * candidate: V2.vessel_ps_static[2](start = 1000000.0)
//  * candidate: V2.vessel_ps_static[1](start = 1000000.0)
//  * candidate: V2.medium.state.p(start = 1000000.0)
//  * candidate: V2.heatTransfer.states[1].p(start = 1000000.0)
// => select value from V2.medium.p(start = V2.p_start) for variable: V2.medium.p
// Warning: Alias set with different nominal values
//  * candidate: V2.heatTransfer.states[1].p(nominal = 1000000.0)
//  * candidate: V2.medium.state.p(nominal = 1000000.0)
//  * candidate: V2.vessel_ps_static[1](nominal = 1000000.0)
//  * candidate: V2.vessel_ps_static[2](nominal = 1000000.0)
//  * candidate: V2.medium.p(nominal = 100000.0)
// => select value from V2.vessel_ps_static[1](nominal = 1000000.0) for variable: V2.medium.p
// Warning: Alias set with several free start values
//  * candidate: V2.medium.T(start = V2.T_start)
//  * candidate: V2.medium.state.T(start = 500.0)
//  * candidate: V2.heatTransfer.states[1].T(start = 500.0)
// => select value from V2.medium.T(start = V2.T_start) for variable: V2.medium.T
// Warning: Alias set with different nominal values
//  * candidate: V2.heatTransfer.heatPorts[1].T(nominal = 300.0)
//  * candidate: V2.heatTransfer.Ts[1](nominal = 300.0)
//  * candidate: V2.heatTransfer.states[1].T(nominal = 500.0)
//  * candidate: V2.medium.state.T(nominal = 500.0)
//  * candidate: V2.medium.T(nominal = 500.0)
// => select value from V2.medium.T(nominal = 500.0) for variable: V2.medium.T
// Warning: Alias set with several free start values
//  * candidate: V1.ports[2].h_outflow(start = 298609.6803431054)
//  * candidate: V1.medium.h(start = V1.h_start)
//  * candidate: V1.ports[1].h_outflow(start = 298609.6803431054)
// => select value from V1.ports[2].h_outflow(start = 298609.6803431054) for variable: V1.ports[2].h_outflow
// Warning: Alias set with several free start values
//  * candidate: V1.medium.p(start = V1.p_start)
//  * candidate: V1.vessel_ps_static[2](start = 1000000.0)
//  * candidate: V1.vessel_ps_static[1](start = 1000000.0)
//  * candidate: V1.medium.state.p(start = 1000000.0)
//  * candidate: V1.heatTransfer.states[1].p(start = 1000000.0)
// => select value from V1.medium.p(start = V1.p_start) for variable: V1.medium.p
// Warning: Alias set with different nominal values
//  * candidate: V1.heatTransfer.states[1].p(nominal = 1000000.0)
//  * candidate: V1.medium.state.p(nominal = 1000000.0)
//  * candidate: V1.vessel_ps_static[1](nominal = 1000000.0)
//  * candidate: V1.vessel_ps_static[2](nominal = 1000000.0)
//  * candidate: V1.medium.p(nominal = 100000.0)
// => select value from V1.vessel_ps_static[1](nominal = 1000000.0) for variable: V1.medium.p
// Warning: Alias set with several free start values
//  * candidate: V1.medium.T(start = V1.T_start)
//  * candidate: V1.medium.state.T(start = 500.0)
//  * candidate: V1.heatTransfer.states[1].T(start = 500.0)
// => select value from V1.medium.T(start = V1.T_start) for variable: V1.medium.T
// Warning: Alias set with different nominal values
//  * candidate: V1.heatTransfer.heatPorts[1].T(nominal = 300.0)
//  * candidate: V1.heatTransfer.Ts[1](nominal = 300.0)
//  * candidate: V1.heatTransfer.states[1].T(nominal = 500.0)
//  * candidate: V1.medium.state.T(nominal = 500.0)
//  * candidate: V1.medium.T(nominal = 500.0)
// => select value from V1.medium.T(nominal = 500.0) for variable: V1.medium.T
// Warning: Alias set with several free start values
//  * candidate: V2.medium.p(start = V2.p_start)
//  * candidate: V2.ports[2].p(start = 1000000.0)
//  * candidate: V1.ports[2].p(start = 1000000.0)
//  * candidate: V1.ports[1].p(start = 1000000.0)
// => select value from V2.medium.p(start = V2.p_start) for variable: V2.medium.p
// Notification: The following equation is consistent and got removed from the initialization problem: $DER.V2.medium.p = 0.0
// Warning: The initial conditions are over specified. Use +d=initialization for more information.
// "
// endResult
