// name: OverdeterminedInitialization.Mechanical.TwoMassesFullInitial
// keywords: initialization, over-determined
// status: correct

loadModel(Modelica); getErrorString();
loadFile("OverdeterminedInitialization.mo"); getErrorString();

simulate(OverdeterminedInitialization.Mechanical.TwoMassesFullInitial); getErrorString();

// Result:
// true
// ""
// true
// ""
// record SimulationResult
//     resultFile = "OverdeterminedInitialization.Mechanical.TwoMassesFullInitial_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 10.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'OverdeterminedInitialization.Mechanical.TwoMassesFullInitial', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "stdout            | info    | The initialization finished successfully without homotopy method.
// stdout            | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: It was not possible to determine if the initialization problem is consistent, because of not evaluable parameters/start values during compile time: mass2.v = $START.mass2.v ($START.mass1.v = $START.mass2.v)
// Warning: It was not possible to determine if the initialization problem is consistent, because of not evaluable parameters/start values during compile time: mass1.s = $START.mass1.s ($START.mass2.s + -0.5 * (mass2.L + mass1.L) = $START.mass1.s)
// Warning: The initial conditions are over specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
// endResult
