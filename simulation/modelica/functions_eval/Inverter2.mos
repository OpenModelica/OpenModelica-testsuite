// name:      Inverter2
// keywords:  evalConstFunc
// status:    correct
//


loadModel(Modelica,{"3.2.1"}); getErrorString();
loadFile("Inverter2.mo"); getErrorString();
simulate(Inverter2, stopTime=1e-11,numberOfIntervalls=2000);getErrorString();
res := OpenModelica.Scripting.compareSimulationResults("Inverter2_res.mat",
  "ReferenceFiles/Inverter2.mat",
  "Inverter2_diff.csv", 0.01, 0.0001,
  {"mn.cc.idrain",
  "mn.irs",
  "mn.ird",
  "mn.Dinternal"}); 
getErrorString();
// Result:
// true
// ""
// true
// ""
// record SimulationResult
//     resultFile = "Inverter2_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 9.999999999999999e-12, numberOfIntervals = 2000, tolerance = 1e-07, method = 'dassl', fileNamePrefix = 'Inverter2', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "stdout            | warning | The step-size 5e-15 is too small. Adjust the step-size to 1e-12.
// "
// end SimulationResult;
// "Warning: Requested package Modelica of version 3.2, but this package was already loaded with version 3.2.1. You might experience problems if these versions are incompatible.
// [Modelica 3.2.1/Electrical/Spice3.mo:4636:5-4637:139:writable] Error: Variable mn.p: Duplicate modification of element  {start  =(untyped) 0.0}  and final  = (typed)0.0 DAE.PROP(Real, C_CONST), value: 0.0 on component m_lambda.
// [Modelica 3.2.1/Electrical/Spice3.mo:4636:5-4637:139:writable] Error: Variable mn.p: Duplicate modification of element  {start  =(untyped) 2.0e-5}  and final  = (typed)2e-05 DAE.PROP(Real, C_CONST), value: 2e-05 on component m_transconductance.
// Error: Duplicate modification of element  {start  =(untyped) 0.0}  and final  = (typed)0.0 DAE.PROP(Real, C_CONST), value: 0.0 on component m_lambda.
// Error: Duplicate modification of element  {start  =(untyped) 2.0e-5}  and final  = (typed)2e-05 DAE.PROP(Real, C_CONST), value: 2e-05 on component m_transconductance.
// [Modelica 3.2.1/Electrical/Spice3.mo:4630:5-4631:56:writable] Warning: Parameter mn.IC has no value, and is fixed during initialization (fixed=true), using available start value (start=-1e+40) as default value.
// "
// {"Files Equal!"}
// ""
// endResult
