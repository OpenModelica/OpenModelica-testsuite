// name: ExtendsReduceDrumBoiler
// cflags: --flowThreshold=1e-15
// status: correct

loadModel(Modelica,{"3.2"});
getErrorString();

setCommandLineOptions("+gDynOpt +d=reduceDynOpt +loop2con=noLin +demoMode");
getErrorString();

loadFile("DrumBoiler.mo");
getErrorString();

echo(false);
res :=optimize(drumBoiler.optDrumBoiler, stopTime=3600, numberOfIntervals=50, tolerance=1e-4, simflags="-lv=LOG_IPOPT -optimizerNP 1 -s optimization -iif ReferenceFiles/drumBoiler.optDrumBoiler_init.mat -ipopt_init FILE -keepHessian=10 -ipopt_warm_start=5");
messages:=res.messages;
getErrorString();

echo(true);
res.resultFile;
if regexBool(messages, "EXIT: Optimal Solution Found.") then
  if regexBool(messages, "Number of Iterations....: 226") then
    print("Number of Iterations....: 226\nEXIT: Optimal Solution Found.");
  else
    print("Number of Iterations changed.\tUpdate test\n");
    exit(1);
  end if;
else
  print("No optimal solution found");
  exit(1);
end if;
getErrorString();


res := OpenModelica.Scripting.compareSimulationResults("drumBoiler.optDrumBoiler_res.mat","ReferenceFiles/drumBoiler.optDrumBoiler_ref.mat","drumBoiler.optDrumBoiler_res.csv",0.01,0.0001,{"controller.x", "evaporator.V_l", "evaporator.p", "q_F", "Y_Valve", "dq_F"});
getErrorString();

// Result:
// true
// ""
// true
// ""
// true
// ""
// true
// "drumBoiler.optDrumBoiler_res.mat"
// Number of Iterations....: 226
// EXIT: Optimal Solution Found.
// ""
// {"Files Equal!"}
// ""
// endResult
