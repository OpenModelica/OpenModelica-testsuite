// name:     Jacobian for Knownvars
// keywords: linearization, Jacobian
// status:   correct
// teardown_command: rm -rf TestKV* linear_TestKV* output.log
// 
//  Case for generating Jacobian for symstem with more simply equations
//  test for Bugfixe
//
loadFile("testknownvar.mo");

setCommandLineOptions("--generateSymbolicLinearization");
getErrorString();

//linearize
linearize(TestKV, stopTime=0);
getErrorString();

setCommandLineOptions("--generateSymbolicLinearization=false");
getErrorString();

loadFile("linear_TestKV.mo");
list(linear_TestKV);
simulate(linear_TestKV);
getErrorString();
readFile("linear_TestKV.log"); // Check that output log is empty

// 
//  Case for numeric linearization of TestKV model
//
//linearize with numeric linearization and data recovery
simulate(TestKV, simflags="-l=0 -l_datarec");
getErrorString();
loadFile("linear_TestKV.mo");
list(linear_TestKV);
simulate(linear_TestKV);
getErrorString();
readFile("linear_TestKV.log"); // Check that output log is empty

// Result:
// true
// true
// ""
// record SimulationResult
//     resultFile = "TestKV_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 0.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'TestKV', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "stdout            | info    | Linearization will performed at point of time: 0.000000
// stdout            | info    | The initialization finished successfully without homotopy method.
// stdout            | info    | The simulation finished successfully.
// stdout            | info    | Linear model is created!
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
// true
// ""
// true
// "model linear_TestKV
//   parameter Integer n = 1;
//   // states
//   parameter Integer k = 0;
//   // top-level inputs
//   parameter Integer l = 0;
//   // top-level outputs
//   parameter Real x0[1] = {0};
//   parameter Real u0[0] = {i for i in 1:0};
//   parameter Real A[1, 1] = [2];
//   parameter Real B[1, 0] = zeros(1, 0);
//   parameter Real C[0, 1] = zeros(0, 1);
//   parameter Real D[0, 0] = zeros(0, 0);
//   Real x[1](start = x0);
//   input Real u[0];
//   output Real y[0];
//   Real 'x_x' = x[1];
// equation
//   der(x) = A * x + B * u;
//   y = C * x + D * u;
// end linear_TestKV;"
// record SimulationResult
//     resultFile = "linear_TestKV_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_TestKV', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "stdout            | info    | The initialization finished successfully without homotopy method.
// stdout            | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
// "stdout            | info    | The initialization finished successfully without homotopy method.
// stdout            | info    | The simulation finished successfully.
// "
// record SimulationResult
//     resultFile = "TestKV_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'TestKV', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-l=0 -l_datarec'",
//     messages = "stdout            | info    | Linearization will performed at point of time: 0.000000
// stdout            | info    | The initialization finished successfully without homotopy method.
// stdout            | info    | The simulation finished successfully.
// stdout            | info    | Linear model is created!
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
// true
// "model linear_TestKV
//   parameter Integer n = 1;
//   // states
//   parameter Integer k = 0;
//   // top-level inputs
//   parameter Integer l = 0;
//   // top-level outputs
//   parameter Integer nz = 1;
//   // data recovery variables
//   parameter Real x0[1] = {0};
//   parameter Real u0[0] = {i for i in 1:0};
//   parameter Real z0[1] = {2.909297426825682};
//   parameter Real A[1, 1] = [2.000000002708404];
//   parameter Real B[1, 0] = zeros(1, 0);
//   parameter Real C[0, 1] = zeros(0, 1);
//   parameter Real D[0, 0] = zeros(0, 0);
//   parameter Real Cz[1, 1] = [0];
//   parameter Real Dz[1, 0] = zeros(1, 0);
//   Real x[1](start = x0);
//   input Real u[0];
//   output Real y[0];
//   output Real z[1];
//   Real 'x_x' = x[1];
//   Real 'z_s' = z[1];
// equation
//   der(x) = A * x + B * u;
//   y = C * x + D * u;
//   z = Cz * x + Dz * u;
// end linear_TestKV;"
// record SimulationResult
//     resultFile = "linear_TestKV_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_TestKV', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "stdout            | info    | The initialization finished successfully without homotopy method.
// stdout            | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
// "stdout            | info    | The initialization finished successfully without homotopy method.
// stdout            | info    | The simulation finished successfully.
// "
// endResult
