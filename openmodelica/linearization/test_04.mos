// name:     test_04.mos
// keywords: <...>
// status:   correct
// teardown_command: rm -rf *simple_test* output.log
// 
// <insert description here>
//

loadFile("test_04.mo");
setCommandLineOptions("--generateSymbolicLinearization");
getErrorString();
linearize(simple_test, stopTime=0);
getErrorString();
setCommandLineOptions("--generateSymbolicLinearization=false");
getErrorString();

loadFile("linear_simple_test.mo");
simulate(linear_simple__test,method="euler");
getErrorString();

list(linear_simple__test);
readFile("linear_simple__test.log"); // Check that output log is empty

// 
//  Case for numeric linearization of LotkaVolterra model
//
//linearize with numeric linearization and data recovery
simulate(simple_test, simflags="-l=0 -l_datarec");
getErrorString();
loadFile("linear_simple_test.mo");
simulate(linear_simple__test, method="euler");
getErrorString();
list(linear_simple__test);
readFile("linear_simple__test.log"); // Check that output log is empty

// Result:
// true
// true
// ""
// record SimulationResult
//     resultFile = "simple_test_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 0.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'simple_test', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "stdout            | info    | Linearization will performed at point of time: 0.000000
// stdout            | info    | The initialization finished successfully without homotopy method.
// stdout            | info    | The simulation finished successfully.
// stdout            | info    | Linear model is created!
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
// true
// ""
// true
// record SimulationResult
//     resultFile = "linear_simple__test_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'euler', fileNamePrefix = 'linear_simple__test', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "stdout            | info    | The initialization finished successfully without homotopy method.
// stdout            | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
// "model linear_simple__test
//   parameter Integer n = 2;
//   // states
//   parameter Integer k = 1;
//   // top-level inputs
//   parameter Integer l = 1;
//   // top-level outputs
//   parameter Real x0[2] = {1, 2};
//   parameter Real u0[1] = {0};
//   parameter Real A[2, 2] = [0, -1; -2, -1];
//   parameter Real B[2, 1] = [0; 0];
//   parameter Real C[1, 2] = [0, 0];
//   parameter Real D[1, 1] = [3];
//   Real x[2](start = x0);
//   input Real u[1](start = u0);
//   output Real y[1];
//   Real 'x_x1' = x[1];
//   Real 'x_x2' = x[2];
//   Real 'u_u' = u[1];
//   Real 'y_y' = y[1];
// equation
//   der(x) = A * x + B * u;
//   y = C * x + D * u;
// end linear_simple__test;"
// "stdout            | info    | The initialization finished successfully without homotopy method.
// stdout            | info    | The simulation finished successfully.
// "
// record SimulationResult
//     resultFile = "simple_test_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'simple_test', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-l=0 -l_datarec'",
//     messages = "stdout            | info    | Linearization will performed at point of time: 0.000000
// stdout            | info    | The initialization finished successfully without homotopy method.
// stdout            | info    | The simulation finished successfully.
// stdout            | info    | Linear model is created!
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
// true
// record SimulationResult
//     resultFile = "linear_simple__test_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'euler', fileNamePrefix = 'linear_simple__test', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "stdout            | info    | The initialization finished successfully without homotopy method.
// stdout            | info    | The simulation finished successfully.
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
// "model linear_simple__test
//   parameter Integer n = 2;
//   // states
//   parameter Integer k = 1;
//   // top-level inputs
//   parameter Integer l = 1;
//   // top-level outputs
//   parameter Integer nz = 2;
//   // data recovery variables
//   parameter Real x0[2] = {1, 2};
//   parameter Real u0[1] = {0};
//   parameter Real z0[2] = {0, 0};
//   parameter Real A[2, 2] = [-2.665600749850023e-07, -1.000000001354202; -2.000000002708404, -1.00000010131423];
//   parameter Real B[2, 1] = [0; 0];
//   parameter Real C[1, 2] = [0, 0];
//   parameter Real D[1, 1] = [3];
//   parameter Real Cz[2, 2] = [0, 0; 0, 0];
//   parameter Real Dz[2, 1] = [1; 3];
//   Real x[2](start = x0);
//   input Real u[1](start = u0);
//   output Real y[1];
//   output Real z[2];
//   Real 'x_x1' = x[1];
//   Real 'x_x2' = x[2];
//   Real 'u_u' = u[1];
//   Real 'y_y' = y[1];
//   Real 'z_u' = z[1];
//   Real 'z_y' = z[2];
// equation
//   der(x) = A * x + B * u;
//   y = C * x + D * u;
//   z = Cz * x + Dz * u;
// end linear_simple__test;"
// "stdout            | info    | The initialization finished successfully without homotopy method.
// stdout            | info    | The simulation finished successfully.
// "
// endResult
