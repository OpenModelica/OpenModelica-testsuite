// name:     Linearization of linear model
// keywords: linearization, linear model
// status:   correct
// teardown_command: rm -rf linearmodel.* linearmodel_* output.log linear_linearmodel.* linear_linearmodel_* linear_linearmodel linearmodel
// 
//  Case for linearization of VanDerPol model
//
loadFile("linmodel.mo");
//linearize
linearize(linearmodel, stopTime=0);
getErrorString();
loadFile("linear_linearmodel.mo");
list(linear_linearmodel);
simulate(linear_linearmodel);
getErrorString();
readFile("linear_linearmodel.log"); // Check that output log is empty

// 
//  Case for numeric linearization of VanDerPol model
//
//linearize with numeric linearization and data recovery
simulate(linearmodel, simflags="-l=0 -l_datarec");
getErrorString();
loadFile("linear_linearmodel.mo");
list(linear_linearmodel);
simulate(linear_linearmodel);
getErrorString();
readFile("linear_linearmodel.log"); // Check that output log is empty

// Result:
// true
// record SimulationResult
//     resultFile = "linearmodel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 0.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linearmodel', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "stdout            | info    | Linearization will performed at point of time: 0.000000
// stdout            | info    | Linear model is created!
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. Use +d=initialization for more information.
// "
// true
// "model linear_linearmodel
//   parameter Integer n = 4;
//   // states
//   parameter Integer k = 0;
//   // top-level inputs
//   parameter Integer l = 0;
//   // top-level outputs
//   parameter Real x0[4] = {1, -2, 3, -5};
//   parameter Real u0[0] = {i for i in 1:0};
//   parameter Real A[4, 4] = [-3, 2, 0, 0; -7, 0, -5, 1; -1, 0, -1, 4; 0, 1, -1, 5];
//   parameter Real B[4, 0] = zeros(4, 0);
//   parameter Real C[0, 4] = zeros(0, 4);
//   parameter Real D[0, 0] = zeros(0, 0);
//   Real x[4](start = x0);
//   input Real u[0];
//   output Real y[0];
//   Real x_Px1 = x[1];
//   Real x_Px2 = x[2];
//   Real x_Px3 = x[3];
//   Real x_Px4 = x[4];
// equation
//   der(x) = A * x + B * u;
//   y = C * x + D * u;
// end linear_linearmodel;"
// record SimulationResult
//     resultFile = "linear_linearmodel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_linearmodel', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. Use +d=initialization for more information.
// "
// ""
// record SimulationResult
//     resultFile = "linearmodel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linearmodel', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-l=0 -l_datarec'",
//     messages = "stdout            | info    | Linearization will performed at point of time: 0.000000
// stdout            | info    | Linear model is created!
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. Use +d=initialization for more information.
// "
// true
// "model linear_linearmodel
//   parameter Integer n = 4;
//   // states
//   parameter Integer k = 0;
//   // top-level inputs
//   parameter Integer l = 0;
//   // top-level outputs
//   parameter Integer nz = 0;
//   // data recovery variables
//   parameter Real x0[4] = {1, -2, 3, -5};
//   parameter Real u0[0] = {i for i in 1:0};
//   parameter Real z0[0] = {i for i in 1:0};
//   parameter Real A[4, 4] = [-2.999999997398604, 1.999999993823069, 0, 0; -6.999999996151411, 0, -5.000000006771011, 0.9999999880261984; -0.9999999880261984, 0, -1.000000001354202, 3.999999996531473; 0, 1.000000014682206, -1.000000001354202, 4.999999984557672];
//   parameter Real B[4, 0] = zeros(4, 0);
//   parameter Real C[0, 4] = zeros(0, 4);
//   parameter Real D[0, 0] = zeros(0, 0);
//   parameter Real Cz[0, 4] = zeros(0, 4);
//   parameter Real Dz[0, 0] = zeros(0, 0);
//   Real x[4](start = x0);
//   input Real u[0];
//   output Real y[0];
//   output Real z[0];
//   Real x_Px1 = x[1];
//   Real x_Px2 = x[2];
//   Real x_Px3 = x[3];
//   Real x_Px4 = x[4];
// equation
//   der(x) = A * x + B * u;
//   y = C * x + D * u;
//   z = Cz * x + Dz * u;
// end linear_linearmodel;"
// record SimulationResult
//     resultFile = "linear_linearmodel_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_linearmodel', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. Use +d=initialization for more information.
// "
// ""
// endResult
