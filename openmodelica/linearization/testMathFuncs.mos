// name:     testMathFuncs linearization
// keywords: differentiation linearization
// status:   correct
// teardown_command: rm -rf mathFuncsTest* output.log linear_mathFuncsTest*
//  
//


loadString("
model mathFuncsTest
  Real x(start=-2),y(start=1);
  output Real r1,r2,r3,r4,r5,r6;
equation
  der(x) = 2*sin(time);
  der(y) = cos(5*time);
  r1 = mod(x,y);
  r2 = div(x,y);
  r3 = rem(x,y);
  r4 = ceil(x*y);
  r5 = floor(x*y);
  r6 = integer(x*y);      
end mathFuncsTest;
");

setCommandLineOptions("+generateSymbolicLinearization");
//linearize
linearize(mathFuncsTest,stopTime=0);
getErrorString();
loadFile("linear_mathFuncsTest.mo");
list(linear_mathFuncsTest);
simulate(linear_mathFuncsTest);
getErrorString();
readFile("linear_mathFuncsTest.log"); // Check that output log is empty


// Result:
// true
// true
// record SimulationResult
//     resultFile = "mathFuncsTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 0.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'mathFuncsTest', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = "stdout            | info    | Linearization will performed at point of time: 0.000000
// stdout            | info    | Linear model is created!
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. Use +d=initialization for more information.
// "
// true
// "model linear_mathFuncsTest
//   parameter Integer n = 2;
//   // states
//   parameter Integer k = 0;
//   // top-level inputs
//   parameter Integer l = 6;
//   // top-level outputs
//   parameter Real x0[2] = {-2, 1};
//   parameter Real u0[0] = {i for i in 1:0};
//   parameter Real A[2, 2] = [0, 0; 0, 0];
//   parameter Real B[2, 0] = zeros(2, 0);
//   parameter Real C[6, 2] = [1, 2; 0, 0; 1, 2; 0, 0; 0, 0; 0, 0];
//   parameter Real D[6, 0] = zeros(6, 0);
//   Real x[2](start = x0);
//   input Real u[0];
//   output Real y[6];
//   Real x_Px = x[1];
//   Real x_Py = x[2];
//   Real y_Pr1 = y[1];
//   Real y_Pr2 = y[2];
//   Real y_Pr3 = y[3];
//   Real y_Pr4 = y[4];
//   Real y_Pr5 = y[5];
//   Real y_Pr6 = y[6];
// equation
//   der(x) = A * x + B * u;
//   y = C * x + D * u;
// end linear_mathFuncsTest;"
// record SimulationResult
//     resultFile = "linear_mathFuncsTest_res.mat",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'linear_mathFuncsTest', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = ''",
//     messages = ""
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. Use +d=initialization for more information.
// "
// ""
// endResult
