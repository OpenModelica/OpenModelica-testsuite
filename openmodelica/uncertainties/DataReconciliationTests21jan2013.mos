// name:     DataReconciliationTests21jan2013
// keywords: uncertainty
// status:   correct
// Second group os test related to uncertainties extraction
//

loadModel(Modelica,{"3.1"}); getErrorString();

loadFile("DataReconciliationTests21jan2013Total.mo");
getErrorString();

modelEquationsUC(DataReconciliationTests.DistillationTower);
getErrorString();

//modelEquationsUC(DataReconciliationTests.ExtractionSetS_NL_Test);
//getErrorString();

//modelEquationsUC(DataReconciliationTests.ExtractionSetSTest);
//getErrorString();

//modelEquationsUC(DataReconciliationTests.ExtractionSetSTest);
//getErrorString();

modelEquationsUC(DataReconciliationTests.FlatSimpleExple);
getErrorString();

modelEquationsUC(DataReconciliationTests.RedundancyTestCase1);
getErrorString();

modelEquationsUC(DataReconciliationTests.RedundancyTestCase2);
getErrorString();

modelEquationsUC(DataReconciliationTests.RedundancyTestCase3);
getErrorString();

modelEquationsUC(DataReconciliationTests.ThermoSysProRedundancyTest1);
getErrorString();

modelEquationsUC(DataReconciliationTests.ThermoSysProRedundancyTest2);
getErrorString();

modelEquationsUC(DataReconciliationTests.ThermoSysProRedundancyTest3);
getErrorString();

modelEquationsUC(DataReconciliationTests.ThermoSysProRedundancyTest4);
getErrorString();

modelEquationsUC(DataReconciliationTests.ThermoSysProSimpleExple);
getErrorString();

modelEquationsUC(DataReconciliationTests.VDI2048Exple);
getErrorString();

// Result:
// true
// ""
// true
// ""
// "{{{xT2[\\[FormalT]],xT1[\\[FormalT]],xB2[\\[FormalT]],xB1[\\[FormalT]],xF2[\\[FormalT]],xF1[\\[FormalT]],T[\\[FormalT]],B[\\[FormalT]],F[\\[FormalT]]},{xT1[\\[FormalT]] + xT2[\\[FormalT]]==100,xB1[\\[FormalT]] + xB2[\\[FormalT]]==100,F[\\[FormalT]] * xF1[\\[FormalT]] + ((-B[\\[FormalT]]) * xB1[\\[FormalT]] - T[\\[FormalT]] * xT1[\\[FormalT]])==0,F[\\[FormalT]] * xF2[\\[FormalT]] + ((-B[\\[FormalT]]) * xB2[\\[FormalT]] - T[\\[FormalT]] * xT2[\\[FormalT]])==0,xF1[\\[FormalT]] + xF2[\\[FormalT]]==100}},{{},{}},{\"None\",\"None\",\"None\",\"None\",\"None\",\"None\",\"None\",\"None\",\"None\"}}"
// ""
// "{{{q4[\\[FormalT]],q3[\\[FormalT]],q2[\\[FormalT]],q1[\\[FormalT]]},{q4[\\[FormalT]]==q1[\\[FormalT]],q1[\\[FormalT]]==q2[\\[FormalT]] + q3[\\[FormalT]]}},{{},{}},{\"None\",\"None\",\"None\",\"None\"}}"
// ""
// "{{{x6[\\[FormalT]],x5[\\[FormalT]],x2[\\[FormalT]],x1[\\[FormalT]]},{x1[\\[FormalT]] + (-x2[\\[FormalT]] - x5[\\[FormalT]])==0,x2[\\[FormalT]] + (x5[\\[FormalT]] - x6[\\[FormalT]])==0}},{{},{}},{\"None\",\"None\",\"None\",\"None\"}}"
// ""
// Warning: The variable 'x2' was not found in the system of knowns
// Warning: The variable 'x1' was not found in the system of knowns
// "{{{x2[\\[FormalT]],x1[\\[FormalT]]},{}},{{},{}},{\"None\",\"None\"}}"
// ""
// "{{{x6[\\[FormalT]],x1[\\[FormalT]]},{x1[\\[FormalT]] - x6[\\[FormalT]]==0}},{{},{}},{\"None\",\"None\"}}"
// ""
// "{{{sensorQ6\\[UpPointer]Q[\\[FormalT]],sensorQ5\\[UpPointer]Q[\\[FormalT]],sensorQ2\\[UpPointer]Q[\\[FormalT]],sensorQ1\\[UpPointer]Q[\\[FormalT]]},{0==sensorQ1\\[UpPointer]Q[\\[FormalT]] + (-sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ5\\[UpPointer]Q[\\[FormalT]]),0==sensorQ2\\[UpPointer]Q[\\[FormalT]] + (sensorQ5\\[UpPointer]Q[\\[FormalT]] - sensorQ6\\[UpPointer]Q[\\[FormalT]]),0==If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ2\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,(sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ4\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]]}},{{sensorQ5\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],sensorQ3\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],switchValve1\\[UpPointer]h[\\[FormalT]],switchValve1\\[UpPointer]rho[\\[FormalT]],switchValve1\\[UpPointer]deltaP[\\[FormalT]],splitter21\\[UpPointer]h[\\[FormalT]],sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]],sensorQ2\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],mixer21\\[UpPointer]h[\\[FormalT]],sensorQ4\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]],splitter21\\[UpPointer]alpha1[\\[FormalT]],mixer21\\[UpPointer]alpha1[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]W[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]DPff[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]x[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]Tef[\\[FormalT]],switchValve1\\[UpPointer]Pm[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]x[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]Tsf[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]x[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]T[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],switchValve1\\[UpPointer]T[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],splitter21\\[UpPointer]T[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],mixer21\\[UpPointer]T[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]lsat\\[UpPointer]h[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]Ec\\[UpPointer]h[\\[FormalT]],sourceP2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]DPgf[\\[FormalT]]},{{simpleStaticCondenser1\\[UpPointer]lsat[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]vsat[\\[FormalT]]}==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_sat_P\"][sourceP2\\[UpPointer]P0],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]T[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]rhoc[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][ToExpression[StringReplace[\"0.5\",\"e\"->\"*1.0*10^\"]] * (sourceP2\\[UpPointer]P0 + sinkP2\\[UpPointer]P0),ToExpression[StringReplace[\"0.5\",\"e\"->\"*1.0*10^\"]] * (simpleStaticCondenser1\\[UpPointer]Ec\\[UpPointer]h[\\[FormalT]] + simpleStaticCondenser1\\[UpPointer]lsat\\[UpPointer]h[\\[FormalT]]),simpleStaticCondenser1\\[UpPointer]modec],simpleStaticCondenser1\\[UpPointer]DPgf[\\[FormalT]]==ToExpression[StringReplace[\"9.806649999999999\",\"e\"->\"*1.0*10^\"]] * (simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]] * (simpleStaticCondenser1\\[UpPointer]z2f - simpleStaticCondenser1\\[UpPointer]z1f)),simpleStaticCondenser1\\[UpPointer]DPff[\\[FormalT]]==simpleStaticCondenser1\\[UpPointer]Kf * FunctionCall[\".ThermoSysPro.Functions.ThermoSquare\"][sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]eps] / simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]],switchValve1\\[UpPointer]deltaP[\\[FormalT]]==simpleStaticCondenser1\\[UpPointer]DPff[\\[FormalT]] + simpleStaticCondenser1\\[UpPointer]DPgf[\\[FormalT]],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]T[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][switchValve1\\[UpPointer]Pm[\\[FormalT]],ToExpression[StringReplace[\"0.5\",\"e\"->\"*1.0*10^\"]] * (sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]] + (sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]])) / sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]modef],2 * sourceP1\\[UpPointer]P0 + -2 * switchValve1\\[UpPointer]Pm[\\[FormalT]]==switchValve1\\[UpPointer]deltaP[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]DPfc[\\[FormalT]]==simpleStaticCondenser1\\[UpPointer]Kc * FunctionCall[\".ThermoSysPro.Functions.ThermoSquare\"][sourceP2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]eps] / simpleStaticCondenser1\\[UpPointer]rhoc[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]W[\\[FormalT]]==sourceP2\\[UpPointer]Q[\\[FormalT]] * (simpleStaticCondenser1\\[UpPointer]Ec\\[UpPointer]h[\\[FormalT]] - simpleStaticCondenser1\\[UpPointer]lsat\\[UpPointer]h[\\[FormalT]]),0==If[ sensorQ6\\[UpPointer]Q[\\[FormalT]] > 0, mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - mixer21\\[UpPointer]h[\\[FormalT]] ,mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sinkP1\\[UpPointer]h0],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][mixer21\\[UpPointer]T[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][-sourceP1\\[UpPointer]P0 - -2 * switchValve1\\[UpPointer]Pm[\\[FormalT]],mixer21\\[UpPointer]h[\\[FormalT]],mixer21\\[UpPointer]mode,mixer21\\[UpPointer]fluid],0==If[ sensorQ5\\[UpPointer]Q[\\[FormalT]] > 0, switchValve1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]] ,switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][splitter21\\[UpPointer]T[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][sourceP1\\[UpPointer]P0,splitter21\\[UpPointer]h[\\[FormalT]],splitter21\\[UpPointer]mode,splitter21\\[UpPointer]fluid],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][switchValve1\\[UpPointer]T[\\[FormalT]],switchValve1\\[UpPointer]rho[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][switchValve1\\[UpPointer]Pm[\\[FormalT]],switchValve1\\[UpPointer]h[\\[FormalT]],switchValve1\\[UpPointer]mode,switchValve1\\[UpPointer]fluid],switchValve1\\[UpPointer]deltaP[\\[FormalT]]==switchValve1\\[UpPointer]K * FunctionCall[\".ThermoSysPro.Functions.ThermoSquare\"][sensorQ5\\[UpPointer]Q[\\[FormalT]],switchValve1\\[UpPointer]eps] / switchValve1\\[UpPointer]rho[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]W[\\[FormalT]]==sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] + (sensorQ5\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]),0==If[ sensorQ5\\[UpPointer]Q[\\[FormalT]] > 0, switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,switchValve1\\[UpPointer]h[\\[FormalT]] - mixer21\\[UpPointer]h[\\[FormalT]]],0==If[ sensorQ5\\[UpPointer]Q[\\[FormalT]] > 0, switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]],0==If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h0 ,sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]],mixer21\\[UpPointer]alpha1[\\[FormalT]]==sensorQ2\\[UpPointer]Q[\\[FormalT]] / sensorQ6\\[UpPointer]Q[\\[FormalT]],splitter21\\[UpPointer]alpha1[\\[FormalT]]==sensorQ2\\[UpPointer]Q[\\[FormalT]] / sensorQ1\\[UpPointer]Q[\\[FormalT]],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]Tsf[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][-sourceP1\\[UpPointer]P0 - -2 * switchValve1\\[UpPointer]Pm[\\[FormalT]],(sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]modef],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]Tef[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][sourceP1\\[UpPointer]P0,(sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]modef],0==If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ4\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,(sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - mixer21\\[UpPointer]h[\\[FormalT]]],0==If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]] ,(sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ2\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]]}},{\"None\",\"None\",\"None\",\"None\"}}"
// "[openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:3793:13-3810:22:writable] Warning: found was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4835:9-4870:36:writable] Warning: sat.T was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4835:9-4870:36:writable] Warning: sat.dpT was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.T was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.dpT was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.cpt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vtt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vpp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vtp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5573:15-5573:31:writable] Warning: cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5454:15-5454:32:writable] Warning: v was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5400:15-5400:31:writable] Warning: cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5348:15-5348:31:writable] Warning: cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4341:9-4383:28:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4385:9-4422:32:writable] Warning: pro.duph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4385:9-4422:32:writable] Warning: pro.duhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4385:9-4422:32:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4751:9-4811:24:writable] Warning: pro.duph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4751:9-4811:24:writable] Warning: pro.duhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.u was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.cp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.ddhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.ddph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.duph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.duhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4562:9-4596:26:writable] Warning: sat.pt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4562:9-4596:26:writable] Warning: sat.cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4598:9-4637:28:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4681:9-4725:32:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// Warning: Alias set with several free start values
//  * candidate: splitter21.h(start = 1000000.0)
//  * candidate: splitter21.Cs2.h_vol(start = 100000.0)
//  * candidate: sensorQ3.C1.h_vol(start = 100000.0)
//  * candidate: splitter21.Cs1.h_vol(start = 100000.0)
//  * candidate: sensorQ2.C1.h_vol(start = 100000.0)
//  * candidate: splitter21.Ce.h_vol(start = 100000.0)
//  * candidate: sensorQ1.C2.h_vol(start = 100000.0)
// => select value from splitter21.h(start = 1000000.0) for variable: splitter21.h
// Warning: Alias set with several free start values
//  * candidate: sensorQ2.Q(start = 500.0)
//  * candidate: sensorQ2.C1.Q(start = 500.0)
//  * candidate: splitter21.Cs1.Q(start = 500.0)
//  * candidate: sensorQ2.C2.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Ef.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Qf(start = 100.0)
//  * candidate: simpleStaticCondenser1.Sf.Q(start = 500.0)
//  * candidate: sensorQ4.C1.Q(start = 500.0)
//  * candidate: sensorQ4.Q(start = 500.0)
//  * candidate: sensorQ4.C2.Q(start = 500.0)
//  * candidate: mixer21.Ce1.Q(start = 500.0)
// => select value from sensorQ2.Q(start = 500.0) for variable: sensorQ2.Q
// Warning: Alias set with several free start values
//  * candidate: mixer21.P(start = 1000000.0)
//  * candidate: mixer21.Cs.P(start = 100000.0)
//  * candidate: sensorQ6.C1.P(start = 100000.0)
//  * candidate: sensorQ6.C2.P(start = 100000.0)
//  * candidate: sinkP1.C.P(start = 100000.0)
//  * candidate: mixer21.Ce2.P(start = 100000.0)
//  * candidate: sensorQ5.C2.P(start = 100000.0)
//  * candidate: sensorQ5.C1.P(start = 100000.0)
//  * candidate: switchValve1.C2.P(start = 100000.0)
//  * candidate: mixer21.Ce1.P(start = 100000.0)
//  * candidate: sensorQ4.C2.P(start = 100000.0)
//  * candidate: sensorQ4.C1.P(start = 100000.0)
//  * candidate: simpleStaticCondenser1.Sf.P(start = 100000.0)
// => select value from mixer21.P(start = 1000000.0) for variable: mixer21.P
// Warning: Alias set with several free start values
//  * candidate: mixer21.h(start = 1000000.0)
//  * candidate: mixer21.Cs.h_vol(start = 100000.0)
//  * candidate: sensorQ6.C1.h_vol(start = 100000.0)
//  * candidate: mixer21.Ce2.h_vol(start = 100000.0)
//  * candidate: sensorQ5.C2.h_vol(start = 100000.0)
//  * candidate: mixer21.Ce1.h_vol(start = 100000.0)
//  * candidate: sensorQ4.C2.h_vol(start = 100000.0)
// => select value from mixer21.h(start = 1000000.0) for variable: mixer21.h
// Warning: Alias set with several free start values
//  * candidate: sensorQ5.Q(start = 500.0)
//  * candidate: sensorQ5.C1.Q(start = 500.0)
//  * candidate: switchValve1.C2.Q(start = 500.0)
//  * candidate: switchValve1.C1.Q(start = 500.0)
//  * candidate: sensorQ3.C2.Q(start = 500.0)
//  * candidate: sensorQ3.C1.Q(start = 500.0)
//  * candidate: splitter21.Cs2.Q(start = 500.0)
//  * candidate: sensorQ3.Q(start = 500.0)
//  * candidate: switchValve1.Q(start = 100.0)
//  * candidate: sensorQ5.C2.Q(start = 500.0)
//  * candidate: mixer21.Ce2.Q(start = 500.0)
// => select value from sensorQ5.Q(start = 500.0) for variable: sensorQ5.Q
// Warning: Alias set with several free start values
//  * candidate: sourceP2.C.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Ec.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Qc(start = 100.0)
//  * candidate: simpleStaticCondenser1.Sc.Q(start = 500.0)
//  * candidate: sinkP2.C.Q(start = 500.0)
// => select value from simpleStaticCondenser1.Qc(start = 100.0) for variable: sourceP2.Q
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.profs.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tsf(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tsf(nominal = 500.0) for variable: simpleStaticCondenser1.Tsf
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.profe.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tef(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tef(nominal = 500.0) for variable: simpleStaticCondenser1.Tef
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.procs.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tsc(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tsc(nominal = 500.0) for variable: simpleStaticCondenser1.Tsc
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.proce.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tec(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tec(nominal = 500.0) for variable: simpleStaticCondenser1.Tec
// Warning: Alias set with different nominal values
//  * candidate: mixer21.pro.T(nominal = 320.0)
//  * candidate: mixer21.T(nominal = 500.0)
// => select value from mixer21.T(nominal = 500.0) for variable: mixer21.T
// Warning: Alias set with different nominal values
//  * candidate: splitter21.pro.T(nominal = 320.0)
//  * candidate: splitter21.T(nominal = 500.0)
// => select value from splitter21.T(nominal = 500.0) for variable: splitter21.T
// Warning: Alias set with different nominal values
//  * candidate: switchValve1.pro.T(nominal = 320.0)
//  * candidate: switchValve1.T(nominal = 500.0)
// => select value from switchValve1.T(nominal = 500.0) for variable: switchValve1.T
// "
// "{{{sensorQ2\\[UpPointer]Q[\\[FormalT]],sensorQ1\\[UpPointer]Q[\\[FormalT]]},{0==If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]] ,(sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ2\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]]}},{{splitter21\\[UpPointer]h[\\[FormalT]],sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]],sensorQ2\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],switchValve1\\[UpPointer]h[\\[FormalT]],sensorQ3\\[UpPointer]Q[\\[FormalT]],mixer21\\[UpPointer]h[\\[FormalT]],sensorQ4\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]],sensorQ6\\[UpPointer]Q[\\[FormalT]],splitter21\\[UpPointer]alpha1[\\[FormalT]],mixer21\\[UpPointer]alpha1[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]W[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]DPff[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]x[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]Tef[\\[FormalT]],switchValve1\\[UpPointer]Pm[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]x[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]Tsf[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]x[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]T[\\[FormalT]],sensorQ5\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],sensorQ3\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],switchValve1\\[UpPointer]rho[\\[FormalT]],switchValve1\\[UpPointer]deltaP[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],switchValve1\\[UpPointer]T[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],splitter21\\[UpPointer]T[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],mixer21\\[UpPointer]T[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]lsat\\[UpPointer]h[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]Ec\\[UpPointer]h[\\[FormalT]],sourceP2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]DPgf[\\[FormalT]]},{{simpleStaticCondenser1\\[UpPointer]lsat[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]vsat[\\[FormalT]]}==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_sat_P\"][sourceP2\\[UpPointer]P0],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]T[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]rhoc[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][ToExpression[StringReplace[\"0.5\",\"e\"->\"*1.0*10^\"]] * (sourceP2\\[UpPointer]P0 + sinkP2\\[UpPointer]P0),ToExpression[StringReplace[\"0.5\",\"e\"->\"*1.0*10^\"]] * (simpleStaticCondenser1\\[UpPointer]Ec\\[UpPointer]h[\\[FormalT]] + simpleStaticCondenser1\\[UpPointer]lsat\\[UpPointer]h[\\[FormalT]]),simpleStaticCondenser1\\[UpPointer]modec],simpleStaticCondenser1\\[UpPointer]DPgf[\\[FormalT]]==ToExpression[StringReplace[\"9.806649999999999\",\"e\"->\"*1.0*10^\"]] * (simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]] * (simpleStaticCondenser1\\[UpPointer]z2f - simpleStaticCondenser1\\[UpPointer]z1f)),switchValve1\\[UpPointer]deltaP[\\[FormalT]]==simpleStaticCondenser1\\[UpPointer]DPff[\\[FormalT]] + simpleStaticCondenser1\\[UpPointer]DPgf[\\[FormalT]],switchValve1\\[UpPointer]deltaP[\\[FormalT]]==switchValve1\\[UpPointer]K * FunctionCall[\".ThermoSysPro.Functions.ThermoSquare\"][sensorQ3\\[UpPointer]Q[\\[FormalT]],switchValve1\\[UpPointer]eps] / switchValve1\\[UpPointer]rho[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]DPff[\\[FormalT]]==simpleStaticCondenser1\\[UpPointer]Kf * FunctionCall[\".ThermoSysPro.Functions.ThermoSquare\"][sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]eps] / simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]],2 * sourceP1\\[UpPointer]P0 + -2 * switchValve1\\[UpPointer]Pm[\\[FormalT]]==switchValve1\\[UpPointer]deltaP[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]DPfc[\\[FormalT]]==simpleStaticCondenser1\\[UpPointer]Kc * FunctionCall[\".ThermoSysPro.Functions.ThermoSquare\"][sourceP2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]eps] / simpleStaticCondenser1\\[UpPointer]rhoc[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]W[\\[FormalT]]==sourceP2\\[UpPointer]Q[\\[FormalT]] * (simpleStaticCondenser1\\[UpPointer]Ec\\[UpPointer]h[\\[FormalT]] - simpleStaticCondenser1\\[UpPointer]lsat\\[UpPointer]h[\\[FormalT]]),0==If[ sensorQ6\\[UpPointer]Q[\\[FormalT]] > 0, mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - mixer21\\[UpPointer]h[\\[FormalT]] ,mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sinkP1\\[UpPointer]h0],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][mixer21\\[UpPointer]T[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][-sourceP1\\[UpPointer]P0 - -2 * switchValve1\\[UpPointer]Pm[\\[FormalT]],mixer21\\[UpPointer]h[\\[FormalT]],mixer21\\[UpPointer]mode,mixer21\\[UpPointer]fluid],0==If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h0 ,sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][splitter21\\[UpPointer]T[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][sourceP1\\[UpPointer]P0,splitter21\\[UpPointer]h[\\[FormalT]],splitter21\\[UpPointer]mode,splitter21\\[UpPointer]fluid],simpleStaticCondenser1\\[UpPointer]W[\\[FormalT]]==sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] + (sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]),0==sensorQ2\\[UpPointer]Q[\\[FormalT]] + (sensorQ3\\[UpPointer]Q[\\[FormalT]] - sensorQ6\\[UpPointer]Q[\\[FormalT]]),0==If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,switchValve1\\[UpPointer]h[\\[FormalT]] - mixer21\\[UpPointer]h[\\[FormalT]]],0==If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, switchValve1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]] ,switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]],0==sensorQ1\\[UpPointer]Q[\\[FormalT]] + (-sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]]),0==If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][switchValve1\\[UpPointer]T[\\[FormalT]],switchValve1\\[UpPointer]rho[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][switchValve1\\[UpPointer]Pm[\\[FormalT]],switchValve1\\[UpPointer]h[\\[FormalT]],switchValve1\\[UpPointer]mode,switchValve1\\[UpPointer]fluid],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]Tsf[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][-sourceP1\\[UpPointer]P0 - -2 * switchValve1\\[UpPointer]Pm[\\[FormalT]],(sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]modef],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]T[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][switchValve1\\[UpPointer]Pm[\\[FormalT]],ToExpression[StringReplace[\"0.5\",\"e\"->\"*1.0*10^\"]] * (sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]] + (sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]])) / sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]modef],mixer21\\[UpPointer]alpha1[\\[FormalT]]==sensorQ2\\[UpPointer]Q[\\[FormalT]] / sensorQ6\\[UpPointer]Q[\\[FormalT]],0==If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ4\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,(sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - mixer21\\[UpPointer]h[\\[FormalT]]],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]Tef[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][sourceP1\\[UpPointer]P0,(sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]modef],0==If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ2\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,(sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ4\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]],splitter21\\[UpPointer]alpha1[\\[FormalT]]==sensorQ2\\[UpPointer]Q[\\[FormalT]] / sensorQ1\\[UpPointer]Q[\\[FormalT]]}},{\"None\",\"None\"}}"
// "[openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:3793:13-3810:22:writable] Warning: found was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4835:9-4870:36:writable] Warning: sat.T was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4835:9-4870:36:writable] Warning: sat.dpT was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.T was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.dpT was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.cpt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vtt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vpp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vtp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5573:15-5573:31:writable] Warning: cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5454:15-5454:32:writable] Warning: v was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5400:15-5400:31:writable] Warning: cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5348:15-5348:31:writable] Warning: cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4341:9-4383:28:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4385:9-4422:32:writable] Warning: pro.duph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4385:9-4422:32:writable] Warning: pro.duhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4385:9-4422:32:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4751:9-4811:24:writable] Warning: pro.duph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4751:9-4811:24:writable] Warning: pro.duhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.u was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.cp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.ddhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.ddph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.duph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.duhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4562:9-4596:26:writable] Warning: sat.pt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4562:9-4596:26:writable] Warning: sat.cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4598:9-4637:28:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4681:9-4725:32:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// Warning: Alias set with several free start values
//  * candidate: splitter21.h(start = 1000000.0)
//  * candidate: splitter21.Cs2.h_vol(start = 100000.0)
//  * candidate: sensorQ3.C1.h_vol(start = 100000.0)
//  * candidate: splitter21.Cs1.h_vol(start = 100000.0)
//  * candidate: sensorQ2.C1.h_vol(start = 100000.0)
//  * candidate: splitter21.Ce.h_vol(start = 100000.0)
//  * candidate: sensorQ1.C2.h_vol(start = 100000.0)
// => select value from splitter21.h(start = 1000000.0) for variable: splitter21.h
// Warning: Alias set with several free start values
//  * candidate: sensorQ2.Q(start = 500.0)
//  * candidate: sensorQ2.C1.Q(start = 500.0)
//  * candidate: splitter21.Cs1.Q(start = 500.0)
//  * candidate: sensorQ2.C2.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Ef.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Qf(start = 100.0)
//  * candidate: simpleStaticCondenser1.Sf.Q(start = 500.0)
//  * candidate: sensorQ4.C1.Q(start = 500.0)
//  * candidate: sensorQ4.Q(start = 500.0)
//  * candidate: sensorQ4.C2.Q(start = 500.0)
//  * candidate: mixer21.Ce1.Q(start = 500.0)
// => select value from sensorQ2.Q(start = 500.0) for variable: sensorQ2.Q
// Warning: Alias set with several free start values
//  * candidate: mixer21.P(start = 1000000.0)
//  * candidate: mixer21.Cs.P(start = 100000.0)
//  * candidate: sensorQ6.C1.P(start = 100000.0)
//  * candidate: sensorQ6.C2.P(start = 100000.0)
//  * candidate: sinkP1.C.P(start = 100000.0)
//  * candidate: mixer21.Ce2.P(start = 100000.0)
//  * candidate: sensorQ5.C2.P(start = 100000.0)
//  * candidate: sensorQ5.C1.P(start = 100000.0)
//  * candidate: switchValve1.C2.P(start = 100000.0)
//  * candidate: mixer21.Ce1.P(start = 100000.0)
//  * candidate: sensorQ4.C2.P(start = 100000.0)
//  * candidate: sensorQ4.C1.P(start = 100000.0)
//  * candidate: simpleStaticCondenser1.Sf.P(start = 100000.0)
// => select value from mixer21.P(start = 1000000.0) for variable: mixer21.P
// Warning: Alias set with several free start values
//  * candidate: mixer21.h(start = 1000000.0)
//  * candidate: mixer21.Cs.h_vol(start = 100000.0)
//  * candidate: sensorQ6.C1.h_vol(start = 100000.0)
//  * candidate: mixer21.Ce2.h_vol(start = 100000.0)
//  * candidate: sensorQ5.C2.h_vol(start = 100000.0)
//  * candidate: mixer21.Ce1.h_vol(start = 100000.0)
//  * candidate: sensorQ4.C2.h_vol(start = 100000.0)
// => select value from mixer21.h(start = 1000000.0) for variable: mixer21.h
// Warning: Alias set with several free start values
//  * candidate: sensorQ3.Q(start = 500.0)
//  * candidate: sensorQ3.C1.Q(start = 500.0)
//  * candidate: splitter21.Cs2.Q(start = 500.0)
//  * candidate: sensorQ3.C2.Q(start = 500.0)
//  * candidate: switchValve1.C1.Q(start = 500.0)
//  * candidate: switchValve1.Q(start = 100.0)
//  * candidate: switchValve1.C2.Q(start = 500.0)
//  * candidate: sensorQ5.C1.Q(start = 500.0)
//  * candidate: sensorQ5.Q(start = 500.0)
//  * candidate: sensorQ5.C2.Q(start = 500.0)
//  * candidate: mixer21.Ce2.Q(start = 500.0)
// => select value from sensorQ3.Q(start = 500.0) for variable: sensorQ3.Q
// Warning: Alias set with several free start values
//  * candidate: sourceP2.C.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Ec.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Qc(start = 100.0)
//  * candidate: simpleStaticCondenser1.Sc.Q(start = 500.0)
//  * candidate: sinkP2.C.Q(start = 500.0)
// => select value from simpleStaticCondenser1.Qc(start = 100.0) for variable: sourceP2.Q
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.profs.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tsf(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tsf(nominal = 500.0) for variable: simpleStaticCondenser1.Tsf
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.profe.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tef(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tef(nominal = 500.0) for variable: simpleStaticCondenser1.Tef
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.procs.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tsc(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tsc(nominal = 500.0) for variable: simpleStaticCondenser1.Tsc
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.proce.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tec(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tec(nominal = 500.0) for variable: simpleStaticCondenser1.Tec
// Warning: Alias set with different nominal values
//  * candidate: mixer21.pro.T(nominal = 320.0)
//  * candidate: mixer21.T(nominal = 500.0)
// => select value from mixer21.T(nominal = 500.0) for variable: mixer21.T
// Warning: Alias set with different nominal values
//  * candidate: splitter21.pro.T(nominal = 320.0)
//  * candidate: splitter21.T(nominal = 500.0)
// => select value from splitter21.T(nominal = 500.0) for variable: splitter21.T
// Warning: Alias set with different nominal values
//  * candidate: switchValve1.pro.T(nominal = 320.0)
//  * candidate: switchValve1.T(nominal = 500.0)
// => select value from switchValve1.T(nominal = 500.0) for variable: switchValve1.T
// "
// "{{{sensorQ6\\[UpPointer]Q[\\[FormalT]],sensorQ1\\[UpPointer]Q[\\[FormalT]]},{0==If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ2\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,(sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ4\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]]}},{{splitter21\\[UpPointer]h[\\[FormalT]],sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]],sensorQ2\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],switchValve1\\[UpPointer]h[\\[FormalT]],sensorQ3\\[UpPointer]Q[\\[FormalT]],sensorQ2\\[UpPointer]Q[\\[FormalT]],mixer21\\[UpPointer]h[\\[FormalT]],sensorQ4\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]],splitter21\\[UpPointer]alpha1[\\[FormalT]],mixer21\\[UpPointer]alpha1[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]W[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]x[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]Tef[\\[FormalT]],switchValve1\\[UpPointer]Pm[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]x[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]Tsf[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]x[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]T[\\[FormalT]],sensorQ5\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],sensorQ3\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],switchValve1\\[UpPointer]rho[\\[FormalT]],switchValve1\\[UpPointer]deltaP[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],switchValve1\\[UpPointer]T[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],splitter21\\[UpPointer]T[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],mixer21\\[UpPointer]T[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]lsat\\[UpPointer]h[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]Ec\\[UpPointer]h[\\[FormalT]],sourceP2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]DPff[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]DPgf[\\[FormalT]]},{{simpleStaticCondenser1\\[UpPointer]lsat[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]vsat[\\[FormalT]]}==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_sat_P\"][sourceP2\\[UpPointer]P0],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]T[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]rhoc[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][ToExpression[StringReplace[\"0.5\",\"e\"->\"*1.0*10^\"]] * (sourceP2\\[UpPointer]P0 + sinkP2\\[UpPointer]P0),ToExpression[StringReplace[\"0.5\",\"e\"->\"*1.0*10^\"]] * (simpleStaticCondenser1\\[UpPointer]Ec\\[UpPointer]h[\\[FormalT]] + simpleStaticCondenser1\\[UpPointer]lsat\\[UpPointer]h[\\[FormalT]]),simpleStaticCondenser1\\[UpPointer]modec],simpleStaticCondenser1\\[UpPointer]DPgf[\\[FormalT]]==ToExpression[StringReplace[\"9.806649999999999\",\"e\"->\"*1.0*10^\"]] * (simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]] * (simpleStaticCondenser1\\[UpPointer]z2f - simpleStaticCondenser1\\[UpPointer]z1f)),switchValve1\\[UpPointer]deltaP[\\[FormalT]]==simpleStaticCondenser1\\[UpPointer]DPff[\\[FormalT]] + simpleStaticCondenser1\\[UpPointer]DPgf[\\[FormalT]],switchValve1\\[UpPointer]deltaP[\\[FormalT]]==switchValve1\\[UpPointer]K * FunctionCall[\".ThermoSysPro.Functions.ThermoSquare\"][sensorQ3\\[UpPointer]Q[\\[FormalT]],switchValve1\\[UpPointer]eps] / switchValve1\\[UpPointer]rho[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]DPff[\\[FormalT]]==simpleStaticCondenser1\\[UpPointer]Kf * FunctionCall[\".ThermoSysPro.Functions.ThermoSquare\"][sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]eps] / simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]],0==sensorQ1\\[UpPointer]Q[\\[FormalT]] + (-sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]]),2 * sourceP1\\[UpPointer]P0 + -2 * switchValve1\\[UpPointer]Pm[\\[FormalT]]==switchValve1\\[UpPointer]deltaP[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]DPfc[\\[FormalT]]==simpleStaticCondenser1\\[UpPointer]Kc * FunctionCall[\".ThermoSysPro.Functions.ThermoSquare\"][sourceP2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]eps] / simpleStaticCondenser1\\[UpPointer]rhoc[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]W[\\[FormalT]]==sourceP2\\[UpPointer]Q[\\[FormalT]] * (simpleStaticCondenser1\\[UpPointer]Ec\\[UpPointer]h[\\[FormalT]] - simpleStaticCondenser1\\[UpPointer]lsat\\[UpPointer]h[\\[FormalT]]),0==If[ sensorQ6\\[UpPointer]Q[\\[FormalT]] > 0, mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - mixer21\\[UpPointer]h[\\[FormalT]] ,mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sinkP1\\[UpPointer]h0],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][mixer21\\[UpPointer]T[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][-sourceP1\\[UpPointer]P0 - -2 * switchValve1\\[UpPointer]Pm[\\[FormalT]],mixer21\\[UpPointer]h[\\[FormalT]],mixer21\\[UpPointer]mode,mixer21\\[UpPointer]fluid],0==If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h0 ,sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][splitter21\\[UpPointer]T[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][sourceP1\\[UpPointer]P0,splitter21\\[UpPointer]h[\\[FormalT]],splitter21\\[UpPointer]mode,splitter21\\[UpPointer]fluid],0==If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]],0==If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,switchValve1\\[UpPointer]h[\\[FormalT]] - mixer21\\[UpPointer]h[\\[FormalT]]],0==sensorQ2\\[UpPointer]Q[\\[FormalT]] + (sensorQ3\\[UpPointer]Q[\\[FormalT]] - sensorQ6\\[UpPointer]Q[\\[FormalT]]),0==If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, switchValve1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]] ,switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][switchValve1\\[UpPointer]T[\\[FormalT]],switchValve1\\[UpPointer]rho[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][switchValve1\\[UpPointer]Pm[\\[FormalT]],switchValve1\\[UpPointer]h[\\[FormalT]],switchValve1\\[UpPointer]mode,switchValve1\\[UpPointer]fluid],simpleStaticCondenser1\\[UpPointer]W[\\[FormalT]]==sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] + (sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]),FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]Tsf[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][-sourceP1\\[UpPointer]P0 - -2 * switchValve1\\[UpPointer]Pm[\\[FormalT]],(sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]modef],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]T[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][switchValve1\\[UpPointer]Pm[\\[FormalT]],ToExpression[StringReplace[\"0.5\",\"e\"->\"*1.0*10^\"]] * (sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]] + (sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]])) / sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]modef],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]Tef[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][sourceP1\\[UpPointer]P0,(sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]modef],mixer21\\[UpPointer]alpha1[\\[FormalT]]==sensorQ2\\[UpPointer]Q[\\[FormalT]] / sensorQ6\\[UpPointer]Q[\\[FormalT]],splitter21\\[UpPointer]alpha1[\\[FormalT]]==sensorQ2\\[UpPointer]Q[\\[FormalT]] / sensorQ1\\[UpPointer]Q[\\[FormalT]],0==If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ4\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,(sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - mixer21\\[UpPointer]h[\\[FormalT]]],0==If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]] ,(sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ2\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]]}},{\"None\",\"None\"}}"
// "[openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:3793:13-3810:22:writable] Warning: found was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4835:9-4870:36:writable] Warning: sat.T was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4835:9-4870:36:writable] Warning: sat.dpT was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.T was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.dpT was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.cpt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vtt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vpp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vtp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5573:15-5573:31:writable] Warning: cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5454:15-5454:32:writable] Warning: v was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5400:15-5400:31:writable] Warning: cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5348:15-5348:31:writable] Warning: cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4341:9-4383:28:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4385:9-4422:32:writable] Warning: pro.duph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4385:9-4422:32:writable] Warning: pro.duhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4385:9-4422:32:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4751:9-4811:24:writable] Warning: pro.duph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4751:9-4811:24:writable] Warning: pro.duhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.u was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.cp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.ddhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.ddph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.duph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.duhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4562:9-4596:26:writable] Warning: sat.pt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4562:9-4596:26:writable] Warning: sat.cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4598:9-4637:28:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4681:9-4725:32:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// Warning: Alias set with several free start values
//  * candidate: splitter21.h(start = 1000000.0)
//  * candidate: splitter21.Cs2.h_vol(start = 100000.0)
//  * candidate: sensorQ3.C1.h_vol(start = 100000.0)
//  * candidate: splitter21.Cs1.h_vol(start = 100000.0)
//  * candidate: sensorQ2.C1.h_vol(start = 100000.0)
//  * candidate: splitter21.Ce.h_vol(start = 100000.0)
//  * candidate: sensorQ1.C2.h_vol(start = 100000.0)
// => select value from splitter21.h(start = 1000000.0) for variable: splitter21.h
// Warning: Alias set with several free start values
//  * candidate: sensorQ2.Q(start = 500.0)
//  * candidate: sensorQ2.C1.Q(start = 500.0)
//  * candidate: splitter21.Cs1.Q(start = 500.0)
//  * candidate: sensorQ2.C2.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Ef.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Qf(start = 100.0)
//  * candidate: simpleStaticCondenser1.Sf.Q(start = 500.0)
//  * candidate: sensorQ4.C1.Q(start = 500.0)
//  * candidate: sensorQ4.Q(start = 500.0)
//  * candidate: sensorQ4.C2.Q(start = 500.0)
//  * candidate: mixer21.Ce1.Q(start = 500.0)
// => select value from sensorQ2.Q(start = 500.0) for variable: sensorQ2.Q
// Warning: Alias set with several free start values
//  * candidate: mixer21.P(start = 1000000.0)
//  * candidate: mixer21.Cs.P(start = 100000.0)
//  * candidate: sensorQ6.C1.P(start = 100000.0)
//  * candidate: sensorQ6.C2.P(start = 100000.0)
//  * candidate: sinkP1.C.P(start = 100000.0)
//  * candidate: mixer21.Ce2.P(start = 100000.0)
//  * candidate: sensorQ5.C2.P(start = 100000.0)
//  * candidate: sensorQ5.C1.P(start = 100000.0)
//  * candidate: switchValve1.C2.P(start = 100000.0)
//  * candidate: mixer21.Ce1.P(start = 100000.0)
//  * candidate: sensorQ4.C2.P(start = 100000.0)
//  * candidate: sensorQ4.C1.P(start = 100000.0)
//  * candidate: simpleStaticCondenser1.Sf.P(start = 100000.0)
// => select value from mixer21.P(start = 1000000.0) for variable: mixer21.P
// Warning: Alias set with several free start values
//  * candidate: mixer21.h(start = 1000000.0)
//  * candidate: mixer21.Cs.h_vol(start = 100000.0)
//  * candidate: sensorQ6.C1.h_vol(start = 100000.0)
//  * candidate: mixer21.Ce2.h_vol(start = 100000.0)
//  * candidate: sensorQ5.C2.h_vol(start = 100000.0)
//  * candidate: mixer21.Ce1.h_vol(start = 100000.0)
//  * candidate: sensorQ4.C2.h_vol(start = 100000.0)
// => select value from mixer21.h(start = 1000000.0) for variable: mixer21.h
// Warning: Alias set with several free start values
//  * candidate: sensorQ3.Q(start = 500.0)
//  * candidate: sensorQ3.C1.Q(start = 500.0)
//  * candidate: splitter21.Cs2.Q(start = 500.0)
//  * candidate: sensorQ3.C2.Q(start = 500.0)
//  * candidate: switchValve1.C1.Q(start = 500.0)
//  * candidate: switchValve1.Q(start = 100.0)
//  * candidate: switchValve1.C2.Q(start = 500.0)
//  * candidate: sensorQ5.C1.Q(start = 500.0)
//  * candidate: sensorQ5.Q(start = 500.0)
//  * candidate: sensorQ5.C2.Q(start = 500.0)
//  * candidate: mixer21.Ce2.Q(start = 500.0)
// => select value from sensorQ3.Q(start = 500.0) for variable: sensorQ3.Q
// Warning: Alias set with several free start values
//  * candidate: sourceP2.C.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Ec.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Qc(start = 100.0)
//  * candidate: simpleStaticCondenser1.Sc.Q(start = 500.0)
//  * candidate: sinkP2.C.Q(start = 500.0)
// => select value from simpleStaticCondenser1.Qc(start = 100.0) for variable: sourceP2.Q
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.profs.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tsf(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tsf(nominal = 500.0) for variable: simpleStaticCondenser1.Tsf
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.profe.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tef(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tef(nominal = 500.0) for variable: simpleStaticCondenser1.Tef
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.procs.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tsc(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tsc(nominal = 500.0) for variable: simpleStaticCondenser1.Tsc
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.proce.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tec(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tec(nominal = 500.0) for variable: simpleStaticCondenser1.Tec
// Warning: Alias set with different nominal values
//  * candidate: mixer21.pro.T(nominal = 320.0)
//  * candidate: mixer21.T(nominal = 500.0)
// => select value from mixer21.T(nominal = 500.0) for variable: mixer21.T
// Warning: Alias set with different nominal values
//  * candidate: splitter21.pro.T(nominal = 320.0)
//  * candidate: splitter21.T(nominal = 500.0)
// => select value from splitter21.T(nominal = 500.0) for variable: splitter21.T
// Warning: Alias set with different nominal values
//  * candidate: switchValve1.pro.T(nominal = 320.0)
//  * candidate: switchValve1.T(nominal = 500.0)
// => select value from switchValve1.T(nominal = 500.0) for variable: switchValve1.T
// "
// "{{{sensorQ6\\[UpPointer]Q[\\[FormalT]],sensorQ5\\[UpPointer]Q[\\[FormalT]],sensorQ3\\[UpPointer]Q[\\[FormalT]],sensorQ4\\[UpPointer]Q[\\[FormalT]],sensorQ2\\[UpPointer]Q[\\[FormalT]],sensorQ1\\[UpPointer]Q[\\[FormalT]]},{0==If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, (sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ4\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,(sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - mixer21\\[UpPointer]h[\\[FormalT]]],0==sensorQ1\\[UpPointer]Q[\\[FormalT]] + (-sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]]),0==sensorQ2\\[UpPointer]Q[\\[FormalT]] + (sensorQ3\\[UpPointer]Q[\\[FormalT]] - sensorQ6\\[UpPointer]Q[\\[FormalT]]),sensorQ2\\[UpPointer]Q[\\[FormalT]]==sensorQ4\\[UpPointer]Q[\\[FormalT]],sensorQ3\\[UpPointer]Q[\\[FormalT]]==sensorQ5\\[UpPointer]Q[\\[FormalT]]}},{{sensorQ5\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],sensorQ3\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],switchValve1\\[UpPointer]h[\\[FormalT]],switchValve1\\[UpPointer]rho[\\[FormalT]],switchValve1\\[UpPointer]deltaP[\\[FormalT]],splitter21\\[UpPointer]h[\\[FormalT]],sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]],sensorQ2\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],mixer21\\[UpPointer]h[\\[FormalT]],sensorQ4\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]],mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]],splitter21\\[UpPointer]alpha1[\\[FormalT]],mixer21\\[UpPointer]alpha1[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]W[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]DPff[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]x[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]Tef[\\[FormalT]],switchValve1\\[UpPointer]Pm[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]x[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]Tsf[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]x[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]T[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],switchValve1\\[UpPointer]T[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],splitter21\\[UpPointer]T[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],mixer21\\[UpPointer]T[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]lsat\\[UpPointer]h[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]Ec\\[UpPointer]h[\\[FormalT]],sourceP2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]DPgf[\\[FormalT]]},{{simpleStaticCondenser1\\[UpPointer]lsat[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]vsat[\\[FormalT]]}==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_sat_P\"][sourceP2\\[UpPointer]P0],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]T[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]rhoc[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promc\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][ToExpression[StringReplace[\"0.5\",\"e\"->\"*1.0*10^\"]] * (sourceP2\\[UpPointer]P0 + sinkP2\\[UpPointer]P0),ToExpression[StringReplace[\"0.5\",\"e\"->\"*1.0*10^\"]] * (simpleStaticCondenser1\\[UpPointer]Ec\\[UpPointer]h[\\[FormalT]] + simpleStaticCondenser1\\[UpPointer]lsat\\[UpPointer]h[\\[FormalT]]),simpleStaticCondenser1\\[UpPointer]modec],simpleStaticCondenser1\\[UpPointer]DPgf[\\[FormalT]]==ToExpression[StringReplace[\"9.806649999999999\",\"e\"->\"*1.0*10^\"]] * (simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]] * (simpleStaticCondenser1\\[UpPointer]z2f - simpleStaticCondenser1\\[UpPointer]z1f)),simpleStaticCondenser1\\[UpPointer]DPff[\\[FormalT]]==simpleStaticCondenser1\\[UpPointer]Kf * FunctionCall[\".ThermoSysPro.Functions.ThermoSquare\"][sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]eps] / simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]],switchValve1\\[UpPointer]deltaP[\\[FormalT]]==simpleStaticCondenser1\\[UpPointer]DPff[\\[FormalT]] + simpleStaticCondenser1\\[UpPointer]DPgf[\\[FormalT]],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]T[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]rhof[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]promf\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][switchValve1\\[UpPointer]Pm[\\[FormalT]],ToExpression[StringReplace[\"0.5\",\"e\"->\"*1.0*10^\"]] * (sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]] + (sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]])) / sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]modef],2 * sourceP1\\[UpPointer]P0 + -2 * switchValve1\\[UpPointer]Pm[\\[FormalT]]==switchValve1\\[UpPointer]deltaP[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]DPfc[\\[FormalT]]==simpleStaticCondenser1\\[UpPointer]Kc * FunctionCall[\".ThermoSysPro.Functions.ThermoSquare\"][sourceP2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]eps] / simpleStaticCondenser1\\[UpPointer]rhoc[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]W[\\[FormalT]]==sourceP2\\[UpPointer]Q[\\[FormalT]] * (simpleStaticCondenser1\\[UpPointer]Ec\\[UpPointer]h[\\[FormalT]] - simpleStaticCondenser1\\[UpPointer]lsat\\[UpPointer]h[\\[FormalT]]),0==If[ sensorQ6\\[UpPointer]Q[\\[FormalT]] > 0, mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - mixer21\\[UpPointer]h[\\[FormalT]] ,mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sinkP1\\[UpPointer]h0],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][mixer21\\[UpPointer]T[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][-sourceP1\\[UpPointer]P0 - -2 * switchValve1\\[UpPointer]Pm[\\[FormalT]],mixer21\\[UpPointer]h[\\[FormalT]],mixer21\\[UpPointer]mode,mixer21\\[UpPointer]fluid],0==If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, switchValve1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]] ,switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][splitter21\\[UpPointer]T[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][sourceP1\\[UpPointer]P0,splitter21\\[UpPointer]h[\\[FormalT]],splitter21\\[UpPointer]mode,splitter21\\[UpPointer]fluid],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][switchValve1\\[UpPointer]T[\\[FormalT]],switchValve1\\[UpPointer]rho[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],switchValve1\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][switchValve1\\[UpPointer]Pm[\\[FormalT]],switchValve1\\[UpPointer]h[\\[FormalT]],switchValve1\\[UpPointer]mode,switchValve1\\[UpPointer]fluid],switchValve1\\[UpPointer]deltaP[\\[FormalT]]==switchValve1\\[UpPointer]K * FunctionCall[\".ThermoSysPro.Functions.ThermoSquare\"][sensorQ3\\[UpPointer]Q[\\[FormalT]],switchValve1\\[UpPointer]eps] / switchValve1\\[UpPointer]rho[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]W[\\[FormalT]]==sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] + (sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]),0==If[ sensorQ5\\[UpPointer]Q[\\[FormalT]] > 0, switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,switchValve1\\[UpPointer]h[\\[FormalT]] - mixer21\\[UpPointer]h[\\[FormalT]]],0==If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,switchValve1\\[UpPointer]h[\\[FormalT]] - sensorQ5\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]],0==If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h0 ,sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]],mixer21\\[UpPointer]alpha1[\\[FormalT]]==sensorQ2\\[UpPointer]Q[\\[FormalT]] / sensorQ6\\[UpPointer]Q[\\[FormalT]],splitter21\\[UpPointer]alpha1[\\[FormalT]]==sensorQ2\\[UpPointer]Q[\\[FormalT]] / sensorQ1\\[UpPointer]Q[\\[FormalT]],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]Tsf[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profs\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][-sourceP1\\[UpPointer]P0 - -2 * switchValve1\\[UpPointer]Pm[\\[FormalT]],(sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]modef],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][simpleStaticCondenser1\\[UpPointer]Tef[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]d[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]u[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]s[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]cp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]ddph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duph[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]duhp[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]profe\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.WaterSteam.IF97.Water_Ph\"][sourceP1\\[UpPointer]P0,(sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]],simpleStaticCondenser1\\[UpPointer]modef],0==If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]] ,(sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ2\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]],0==If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (sensorQ1\\[UpPointer]Q[\\[FormalT]] * sensorQ1\\[UpPointer]C1\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ2\\[UpPointer]C2\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]] ,(sensorQ6\\[UpPointer]Q[\\[FormalT]] * mixer21\\[UpPointer]Cs\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * switchValve1\\[UpPointer]h[\\[FormalT]]) / sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ4\\[UpPointer]C1\\[UpPointer]h\\[UnderBracket]vol[\\[FormalT]]]}},{\"None\",\"None\",\"None\",\"None\",\"None\",\"None\"}}"
// "[openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:3793:13-3810:22:writable] Warning: found was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4835:9-4870:36:writable] Warning: sat.T was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4835:9-4870:36:writable] Warning: sat.dpT was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.T was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.dpT was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.cpt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vtt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vpp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vtp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5573:15-5573:31:writable] Warning: cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5454:15-5454:32:writable] Warning: v was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5400:15-5400:31:writable] Warning: cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5348:15-5348:31:writable] Warning: cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4341:9-4383:28:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4385:9-4422:32:writable] Warning: pro.duph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4385:9-4422:32:writable] Warning: pro.duhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4385:9-4422:32:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4751:9-4811:24:writable] Warning: pro.duph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4751:9-4811:24:writable] Warning: pro.duhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.u was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.cp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.ddhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.ddph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.duph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.duhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4562:9-4596:26:writable] Warning: sat.pt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4562:9-4596:26:writable] Warning: sat.cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4598:9-4637:28:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4681:9-4725:32:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// Warning: Alias set with several free start values
//  * candidate: splitter21.h(start = 1000000.0)
//  * candidate: splitter21.Cs2.h_vol(start = 100000.0)
//  * candidate: sensorQ3.C1.h_vol(start = 100000.0)
//  * candidate: splitter21.Cs1.h_vol(start = 100000.0)
//  * candidate: sensorQ2.C1.h_vol(start = 100000.0)
//  * candidate: splitter21.Ce.h_vol(start = 100000.0)
//  * candidate: sensorQ1.C2.h_vol(start = 100000.0)
// => select value from splitter21.h(start = 1000000.0) for variable: splitter21.h
// Warning: Alias set with several free start values
//  * candidate: sensorQ2.Q(start = 500.0)
//  * candidate: sensorQ2.C1.Q(start = 500.0)
//  * candidate: splitter21.Cs1.Q(start = 500.0)
//  * candidate: sensorQ2.C2.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Ef.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Qf(start = 100.0)
//  * candidate: simpleStaticCondenser1.Sf.Q(start = 500.0)
//  * candidate: sensorQ4.C1.Q(start = 500.0)
//  * candidate: sensorQ4.C2.Q(start = 500.0)
//  * candidate: mixer21.Ce1.Q(start = 500.0)
// => select value from sensorQ2.Q(start = 500.0) for variable: sensorQ2.Q
// Warning: Alias set with several free start values
//  * candidate: mixer21.P(start = 1000000.0)
//  * candidate: mixer21.Cs.P(start = 100000.0)
//  * candidate: sensorQ6.C1.P(start = 100000.0)
//  * candidate: sensorQ6.C2.P(start = 100000.0)
//  * candidate: sinkP1.C.P(start = 100000.0)
//  * candidate: mixer21.Ce2.P(start = 100000.0)
//  * candidate: sensorQ5.C2.P(start = 100000.0)
//  * candidate: sensorQ5.C1.P(start = 100000.0)
//  * candidate: switchValve1.C2.P(start = 100000.0)
//  * candidate: mixer21.Ce1.P(start = 100000.0)
//  * candidate: sensorQ4.C2.P(start = 100000.0)
//  * candidate: sensorQ4.C1.P(start = 100000.0)
//  * candidate: simpleStaticCondenser1.Sf.P(start = 100000.0)
// => select value from mixer21.P(start = 1000000.0) for variable: mixer21.P
// Warning: Alias set with several free start values
//  * candidate: mixer21.h(start = 1000000.0)
//  * candidate: mixer21.Cs.h_vol(start = 100000.0)
//  * candidate: sensorQ6.C1.h_vol(start = 100000.0)
//  * candidate: mixer21.Ce2.h_vol(start = 100000.0)
//  * candidate: sensorQ5.C2.h_vol(start = 100000.0)
//  * candidate: mixer21.Ce1.h_vol(start = 100000.0)
//  * candidate: sensorQ4.C2.h_vol(start = 100000.0)
// => select value from mixer21.h(start = 1000000.0) for variable: mixer21.h
// Warning: Alias set with several free start values
//  * candidate: sensorQ3.Q(start = 500.0)
//  * candidate: sensorQ3.C1.Q(start = 500.0)
//  * candidate: splitter21.Cs2.Q(start = 500.0)
//  * candidate: sensorQ3.C2.Q(start = 500.0)
//  * candidate: switchValve1.C1.Q(start = 500.0)
//  * candidate: switchValve1.Q(start = 100.0)
//  * candidate: switchValve1.C2.Q(start = 500.0)
//  * candidate: sensorQ5.C1.Q(start = 500.0)
//  * candidate: sensorQ5.C2.Q(start = 500.0)
//  * candidate: mixer21.Ce2.Q(start = 500.0)
// => select value from sensorQ3.Q(start = 500.0) for variable: sensorQ3.Q
// Warning: Alias set with several free start values
//  * candidate: sourceP2.C.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Ec.Q(start = 500.0)
//  * candidate: simpleStaticCondenser1.Qc(start = 100.0)
//  * candidate: simpleStaticCondenser1.Sc.Q(start = 500.0)
//  * candidate: sinkP2.C.Q(start = 500.0)
// => select value from simpleStaticCondenser1.Qc(start = 100.0) for variable: sourceP2.Q
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.profs.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tsf(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tsf(nominal = 500.0) for variable: simpleStaticCondenser1.Tsf
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.profe.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tef(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tef(nominal = 500.0) for variable: simpleStaticCondenser1.Tef
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.procs.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tsc(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tsc(nominal = 500.0) for variable: simpleStaticCondenser1.Tsc
// Warning: Alias set with different nominal values
//  * candidate: simpleStaticCondenser1.proce.T(nominal = 320.0)
//  * candidate: simpleStaticCondenser1.Tec(nominal = 500.0)
// => select value from simpleStaticCondenser1.Tec(nominal = 500.0) for variable: simpleStaticCondenser1.Tec
// Warning: Alias set with different nominal values
//  * candidate: mixer21.pro.T(nominal = 320.0)
//  * candidate: mixer21.T(nominal = 500.0)
// => select value from mixer21.T(nominal = 500.0) for variable: mixer21.T
// Warning: Alias set with different nominal values
//  * candidate: splitter21.pro.T(nominal = 320.0)
//  * candidate: splitter21.T(nominal = 500.0)
// => select value from splitter21.T(nominal = 500.0) for variable: splitter21.T
// Warning: Alias set with different nominal values
//  * candidate: switchValve1.pro.T(nominal = 320.0)
//  * candidate: switchValve1.T(nominal = 500.0)
// => select value from switchValve1.T(nominal = 500.0) for variable: switchValve1.T
// "
// "{{{sensorQ4\\[UpPointer]Q[\\[FormalT]],sensorQ1\\[UpPointer]Q[\\[FormalT]],sensorQ3\\[UpPointer]Q[\\[FormalT]],sensorQ2\\[UpPointer]Q[\\[FormalT]]},{0==sensorQ1\\[UpPointer]Q[\\[FormalT]] + (-sensorQ2\\[UpPointer]Q[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]]),0==sensorQ2\\[UpPointer]Q[\\[FormalT]] + (sensorQ3\\[UpPointer]Q[\\[FormalT]] - sensorQ4\\[UpPointer]Q[\\[FormalT]]),(sensorQ2\\[UpPointer]Q[\\[FormalT]] * pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + ((-sensorQ3\\[UpPointer]Q[\\[FormalT]]) * (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,pipePressureLoss2\\[UpPointer]h[\\[FormalT]] / 0 + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0]) / 0]) - sensorQ4\\[UpPointer]Q[\\[FormalT]] * (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, (-(If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]]) / 0 ,0])) / (1 + (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,-1])) ,sinkP1\\[UpPointer]h]))) / (sensorQ4\\[UpPointer]Q[\\[FormalT]] * (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, ((If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) - (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) * (1 + (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,-1]))) / (1 + (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,-1])) ^ 2 ,0]) + sensorQ3\\[UpPointer]Q[\\[FormalT]] * (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, ((If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ^ 2 - (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) * (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ^ 2 ,0 / 0]))==ToExpression[StringReplace[\"0.5\",\"e\"->\"*1.0*10^\"]] * (2 * pipePressureLoss1\\[UpPointer]Pm[\\[FormalT]] - (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, ((If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, (-(If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])])) / 0 - splitter21\\[UpPointer]h[\\[FormalT]] / 0 ,If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0]]) - (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0])) / (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,((If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0]) - (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0])) / 0]) - sourceP1\\[UpPointer]P0)}},{{pipePressureLoss1\\[UpPointer]deltaPf[\\[FormalT]],splitter21\\[UpPointer]alpha1[\\[FormalT]],mixer21\\[UpPointer]alpha1[\\[FormalT]],pipePressureLoss1\\[UpPointer]h[\\[FormalT]],splitter21\\[UpPointer]h[\\[FormalT]],pipePressureLoss2\\[UpPointer]h[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],mixer21\\[UpPointer]T[\\[FormalT]],pipePressureLoss2\\[UpPointer]deltaPf[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],pipePressureLoss2\\[UpPointer]T[\\[FormalT]],pipePressureLoss3\\[UpPointer]deltaPf[\\[FormalT]],pipePressureLoss1\\[UpPointer]Pm[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],pipePressureLoss3\\[UpPointer]T[\\[FormalT]],pipePressureLoss4\\[UpPointer]deltaP[\\[FormalT]],pipePressureLoss2\\[UpPointer]deltaP[\\[FormalT]],pipePressureLoss4\\[UpPointer]Pm[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],pipePressureLoss4\\[UpPointer]T[\\[FormalT]],pipePressureLoss1\\[UpPointer]deltaP[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],pipePressureLoss1\\[UpPointer]T[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],splitter21\\[UpPointer]T[\\[FormalT]]},{pipePressureLoss3\\[UpPointer]deltaPf[\\[FormalT]]==pipePressureLoss3\\[UpPointer]K * FunctionCall[\".ThermoSysPro.Functions.ThermoSquare\"][sensorQ3\\[UpPointer]Q[\\[FormalT]],pipePressureLoss3\\[UpPointer]eps] / pipePressureLoss3\\[UpPointer]p\\[UnderBracket]rho,pipePressureLoss2\\[UpPointer]deltaP[\\[FormalT]]==pipePressureLoss3\\[UpPointer]deltaPf[\\[FormalT]] + pipePressureLoss3\\[UpPointer]deltaPg,pipePressureLoss2\\[UpPointer]deltaP[\\[FormalT]]==pipePressureLoss2\\[UpPointer]deltaPf[\\[FormalT]] + pipePressureLoss2\\[UpPointer]deltaPg,(-(If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, (-(If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])])) / 0 - splitter21\\[UpPointer]h[\\[FormalT]] / 0 ,If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0]]) - (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0]) ,(If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0]) - (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0])])) / (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0] ,0]) - sinkP1\\[UpPointer]P0==pipePressureLoss4\\[UpPointer]deltaP[\\[FormalT]],2 * sourceP1\\[UpPointer]P0 + -2 * pipePressureLoss1\\[UpPointer]Pm[\\[FormalT]]==pipePressureLoss1\\[UpPointer]deltaP[\\[FormalT]],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][splitter21\\[UpPointer]T[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],splitter21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][-sourceP1\\[UpPointer]P0 - -2 * pipePressureLoss1\\[UpPointer]Pm[\\[FormalT]],splitter21\\[UpPointer]h[\\[FormalT]],splitter21\\[UpPointer]mode,splitter21\\[UpPointer]fluid],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][pipePressureLoss3\\[UpPointer]T[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],pipePressureLoss3\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],(sensorQ1\\[UpPointer]Q[\\[FormalT]] * pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + sensorQ3\\[UpPointer]Q[\\[FormalT]] * (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,pipePressureLoss2\\[UpPointer]h[\\[FormalT]] / 0 + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0]) / 0]) - sensorQ2\\[UpPointer]Q[\\[FormalT]] * pipePressureLoss2\\[UpPointer]h[\\[FormalT]]) / ((-sensorQ3\\[UpPointer]Q[\\[FormalT]]) * (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, ((If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ^ 2 - (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) * (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ^ 2 ,0 / 0]))]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][(sensorQ2\\[UpPointer]Q[\\[FormalT]] * pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,pipePressureLoss2\\[UpPointer]h[\\[FormalT]] / 0 + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0]) / 0]) - sensorQ4\\[UpPointer]Q[\\[FormalT]] * (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, (-(If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]]) / 0 ,0])) / (1 + (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,-1])) ,sinkP1\\[UpPointer]h])) / (sensorQ4\\[UpPointer]Q[\\[FormalT]] * (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, ((If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) - (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) * (1 + (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,-1]))) / (1 + (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,-1])) ^ 2 ,0]) + sensorQ3\\[UpPointer]Q[\\[FormalT]] * (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, ((If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ^ 2 - (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) * (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ^ 2 ,0 / 0])),(-(If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0] ,0]),pipePressureLoss3\\[UpPointer]mode,pipePressureLoss3\\[UpPointer]fluid],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][pipePressureLoss1\\[UpPointer]T[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],pipePressureLoss1\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][pipePressureLoss1\\[UpPointer]Pm[\\[FormalT]],pipePressureLoss1\\[UpPointer]h[\\[FormalT]],pipePressureLoss1\\[UpPointer]mode,pipePressureLoss1\\[UpPointer]fluid],pipePressureLoss1\\[UpPointer]deltaPf[\\[FormalT]]==pipePressureLoss1\\[UpPointer]K * FunctionCall[\".ThermoSysPro.Functions.ThermoSquare\"][sensorQ1\\[UpPointer]Q[\\[FormalT]],pipePressureLoss1\\[UpPointer]eps] / pipePressureLoss1\\[UpPointer]p\\[UnderBracket]rho,pipePressureLoss1\\[UpPointer]deltaP[\\[FormalT]]==pipePressureLoss1\\[UpPointer]deltaPf[\\[FormalT]] + pipePressureLoss1\\[UpPointer]deltaPg,pipePressureLoss4\\[UpPointer]Pm[\\[FormalT]]==ToExpression[StringReplace[\"0.5\",\"e\"->\"*1.0*10^\"]] * (sinkP1\\[UpPointer]P0 - (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, ((If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, (-(If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])])) / 0 - splitter21\\[UpPointer]h[\\[FormalT]] / 0 ,If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0]]) - (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0])) / (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,((If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0]) - (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0])) / 0])),FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][pipePressureLoss4\\[UpPointer]T[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],pipePressureLoss4\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][pipePressureLoss4\\[UpPointer]Pm[\\[FormalT]],If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, (-(If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]]) / 0 ,0])) / (1 + (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,-1])) ,sinkP1\\[UpPointer]h],pipePressureLoss4\\[UpPointer]mode,pipePressureLoss4\\[UpPointer]fluid],mixer21\\[UpPointer]alpha1[\\[FormalT]]==sensorQ2\\[UpPointer]Q[\\[FormalT]] / sensorQ4\\[UpPointer]Q[\\[FormalT]],splitter21\\[UpPointer]alpha1[\\[FormalT]]==sensorQ2\\[UpPointer]Q[\\[FormalT]] / sensorQ1\\[UpPointer]Q[\\[FormalT]],(pipePressureLoss2\\[UpPointer]deltaP[\\[FormalT]] + (sourceP1\\[UpPointer]P0 + -2 * pipePressureLoss1\\[UpPointer]Pm[\\[FormalT]] - (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, ((If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, (-(If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])])) / 0 - splitter21\\[UpPointer]h[\\[FormalT]] / 0 ,If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0]]) - (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0])) / (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0]) / 0 - (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])]) / 0]))) / (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, ((If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ^ 2 - ((If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, (-(If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])])) / 0 - splitter21\\[UpPointer]h[\\[FormalT]] / 0 ,If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0]]) - (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0])) * (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0])) / (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ^ 2 ,0 / 0])==pipePressureLoss4\\[UpPointer]K * FunctionCall[\".ThermoSysPro.Functions.ThermoSquare\"][sensorQ4\\[UpPointer]Q[\\[FormalT]],pipePressureLoss4\\[UpPointer]eps] / pipePressureLoss4\\[UpPointer]p\\[UnderBracket]rho,pipePressureLoss4\\[UpPointer]deltaP[\\[FormalT]]==(pipePressureLoss2\\[UpPointer]deltaP[\\[FormalT]] + (sourceP1\\[UpPointer]P0 + -2 * pipePressureLoss1\\[UpPointer]Pm[\\[FormalT]] - (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, ((If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, (-(If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])])) / 0 - splitter21\\[UpPointer]h[\\[FormalT]] / 0 ,If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0]]) - (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0])) / (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0]) / 0 - (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])]) / 0]))) / (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, ((If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ^ 2 - ((If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, (-(If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])])) / 0 - splitter21\\[UpPointer]h[\\[FormalT]] / 0 ,If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0]]) - (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0])) * (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0])) / (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ^ 2 ,0 / 0]) + pipePressureLoss4\\[UpPointer]deltaPg,FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][mixer21\\[UpPointer]T[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],mixer21\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][(-(If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, (-(If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])])) / 0 - splitter21\\[UpPointer]h[\\[FormalT]] / 0 ,If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0]]) - (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0]) ,(If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0]) - (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0])) / 0])])) / (If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, If[ sensorQ3\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0] ,0]),(-(If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0] ,0]),mixer21\\[UpPointer]mode,mixer21\\[UpPointer]fluid],FunctionCall[\".ThermoSysPro.Properties.WaterSteam.Common.ThermoProperties_ph\"][pipePressureLoss2\\[UpPointer]T[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]d[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]u[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]s[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]cp[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]ddhp[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]ddph[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]duph[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]duhp[\\[FormalT]],pipePressureLoss2\\[UpPointer]pro\\[UpPointer]x[\\[FormalT]]]==FunctionCall[\".ThermoSysPro.Properties.Fluid.Ph\"][(sensorQ2\\[UpPointer]Q[\\[FormalT]] * pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - sensorQ3\\[UpPointer]Q[\\[FormalT]] * (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,pipePressureLoss2\\[UpPointer]h[\\[FormalT]] / 0 + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]])) / (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ,(pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0]) / 0]) - sensorQ4\\[UpPointer]Q[\\[FormalT]] * (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, (-(If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, pipePressureLoss1\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ1\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - sourceP1\\[UpPointer]h) / 0 ,-pipePressureLoss1\\[UpPointer]h[\\[FormalT]]]) ,pipePressureLoss1\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]]) / 0 ,0])) / (1 + (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,-1])) ,sinkP1\\[UpPointer]h])) / (sensorQ4\\[UpPointer]Q[\\[FormalT]] * (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, ((If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) - (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) * (1 + (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,-1]))) / (1 + (If[ sensorQ4\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,-1])) ^ 2 ,0]) + sensorQ3\\[UpPointer]Q[\\[FormalT]] * (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, ((If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ^ 2 - (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] + (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, (pipePressureLoss2\\[UpPointer]h[\\[FormalT]] - splitter21\\[UpPointer]h[\\[FormalT]]) / 0 ,-pipePressureLoss2\\[UpPointer]h[\\[FormalT]]])) * (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0])) / (If[ sensorQ2\\[UpPointer]Q[\\[FormalT]] > 0, 0 / 0 ,0]) ^ 2 ,0 / 0])),pipePressureLoss2\\[UpPointer]h[\\[FormalT]],pipePressureLoss2\\[UpPointer]mode,pipePressureLoss2\\[UpPointer]fluid]}},{\"None\",\"None\",\"None\",\"None\"}}"
// "[openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4598:9-4637:28:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4681:9-4725:32:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:3793:13-3810:22:writable] Warning: found was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4835:9-4870:36:writable] Warning: sat.T was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4835:9-4870:36:writable] Warning: sat.dpT was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.T was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.dpT was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.cpt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vtt was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vpp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4894:9-4919:40:writable] Warning: sat.vtp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5573:15-5573:31:writable] Warning: cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5454:15-5454:32:writable] Warning: v was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5400:15-5400:31:writable] Warning: cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:5348:15-5348:31:writable] Warning: cv was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4341:9-4383:28:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4385:9-4422:32:writable] Warning: pro.duph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4385:9-4422:32:writable] Warning: pro.duhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4385:9-4422:32:writable] Warning: pro.x was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4751:9-4811:24:writable] Warning: pro.duph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:4751:9-4811:24:writable] Warning: pro.duhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.u was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.cp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.ddhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.ddph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.duph was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:1321:7-1425:20:writable] Warning: pro.duhp was used before it was defined (given a value). Additional such uses may exist for the variable, but some messages were suppressed.
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6628:7-6663:21:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidInlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// [openmodelica/uncertainties/DataReconciliationTests21jan2013Total.mo:6665:7-6700:22:writable] Warning: Connector .ThermoSysPro.WaterSteam.Connectors.FluidOutlet is not balanced: The number of potential variables (4) is not equal to the number of flow variables (0).
// Warning: Alias set with several free start values
//  * candidate: sensorQ4.Q(start = 500.0)
//  * candidate: sensorQ4.C1.Q(start = 500.0)
//  * candidate: mixer21.Cs.Q(start = 500.0)
//  * candidate: sensorQ4.C2.Q(start = 500.0)
//  * candidate: pipePressureLoss4.C1.Q(start = 500.0)
//  * candidate: pipePressureLoss4.Q(start = 100.0)
//  * candidate: pipePressureLoss4.C2.Q(start = 500.0)
//  * candidate: sinkP1.C.Q(start = 500.0)
// => select value from sensorQ4.Q(start = 500.0) for variable: sensorQ4.Q
// Warning: Alias set with several free start values
//  * candidate: mixer21.h(start = 1000000.0)
//  * candidate: mixer21.Cs.h_vol(start = 100000.0)
//  * candidate: sensorQ4.C1.h_vol(start = 100000.0)
//  * candidate: mixer21.Ce2.h_vol(start = 100000.0)
//  * candidate: pipePressureLoss3.C2.h_vol(start = 100000.0)
//  * candidate: mixer21.Ce1.h_vol(start = 100000.0)
//  * candidate: pipePressureLoss2.C2.h_vol(start = 100000.0)
// => select value from mixer21.h(start = 1000000.0) for variable: mixer21.h
// Warning: Alias set with several free start values
//  * candidate: sensorQ2.Q(start = 500.0)
//  * candidate: sensorQ2.C1.Q(start = 500.0)
//  * candidate: splitter21.Cs1.Q(start = 500.0)
//  * candidate: sensorQ2.C2.Q(start = 500.0)
//  * candidate: pipePressureLoss2.C1.Q(start = 500.0)
//  * candidate: pipePressureLoss2.Q(start = 100.0)
//  * candidate: pipePressureLoss2.C2.Q(start = 500.0)
//  * candidate: mixer21.Ce1.Q(start = 500.0)
// => select value from sensorQ2.Q(start = 500.0) for variable: sensorQ2.Q
// Warning: Alias set with several free start values
//  * candidate: mixer21.P(start = 1000000.0)
//  * candidate: mixer21.Cs.P(start = 100000.0)
//  * candidate: sensorQ4.C1.P(start = 100000.0)
//  * candidate: sensorQ4.C2.P(start = 100000.0)
//  * candidate: pipePressureLoss4.C1.P(start = 100000.0)
//  * candidate: mixer21.Ce2.P(start = 100000.0)
//  * candidate: pipePressureLoss3.C2.P(start = 100000.0)
//  * candidate: mixer21.Ce1.P(start = 100000.0)
//  * candidate: pipePressureLoss2.C2.P(start = 100000.0)
// => select value from mixer21.P(start = 1000000.0) for variable: mixer21.P
// Warning: Alias set with several free start values
//  * candidate: sensorQ3.Q(start = 500.0)
//  * candidate: sensorQ3.C1.Q(start = 500.0)
//  * candidate: splitter21.Cs2.Q(start = 500.0)
//  * candidate: sensorQ3.C2.Q(start = 500.0)
//  * candidate: pipePressureLoss3.C1.Q(start = 500.0)
//  * candidate: pipePressureLoss3.Q(start = 100.0)
//  * candidate: pipePressureLoss3.C2.Q(start = 500.0)
//  * candidate: mixer21.Ce2.Q(start = 500.0)
// => select value from sensorQ3.Q(start = 500.0) for variable: sensorQ3.Q
// Warning: Alias set with several free start values
//  * candidate: splitter21.h(start = 1000000.0)
//  * candidate: splitter21.Cs2.h_vol(start = 100000.0)
//  * candidate: sensorQ3.C1.h_vol(start = 100000.0)
//  * candidate: splitter21.Cs1.h_vol(start = 100000.0)
//  * candidate: sensorQ2.C1.h_vol(start = 100000.0)
//  * candidate: splitter21.Ce.h_vol(start = 100000.0)
//  * candidate: pipePressureLoss1.C2.h_vol(start = 100000.0)
// => select value from splitter21.h(start = 1000000.0) for variable: splitter21.h
// Warning: Alias set with several free start values
//  * candidate: sensorQ1.Q(start = 500.0)
//  * candidate: sensorQ1.C1.Q(start = 500.0)
//  * candidate: sourceP1.C.Q(start = 500.0)
//  * candidate: sensorQ1.C2.Q(start = 500.0)
//  * candidate: pipePressureLoss1.C1.Q(start = 500.0)
//  * candidate: pipePressureLoss1.Q(start = 100.0)
//  * candidate: pipePressureLoss1.C2.Q(start = 500.0)
//  * candidate: splitter21.Ce.Q(start = 500.0)
// => select value from sensorQ1.Q(start = 500.0) for variable: sensorQ1.Q
// Warning: Alias set with several free start values
//  * candidate: splitter21.P(start = 1000000.0)
//  * candidate: splitter21.Cs2.P(start = 100000.0)
//  * candidate: sensorQ3.C1.P(start = 100000.0)
//  * candidate: sensorQ3.C2.P(start = 100000.0)
//  * candidate: pipePressureLoss3.C1.P(start = 100000.0)
//  * candidate: splitter21.Cs1.P(start = 100000.0)
//  * candidate: sensorQ2.C1.P(start = 100000.0)
//  * candidate: sensorQ2.C2.P(start = 100000.0)
//  * candidate: pipePressureLoss2.C1.P(start = 100000.0)
//  * candidate: splitter21.Ce.P(start = 100000.0)
//  * candidate: pipePressureLoss1.C2.P(start = 100000.0)
// => select value from splitter21.P(start = 1000000.0) for variable: splitter21.P
// Warning: Alias set with different nominal values
//  * candidate: pipePressureLoss4.pro.T(nominal = 320.0)
//  * candidate: pipePressureLoss4.T(nominal = 500.0)
// => select value from pipePressureLoss4.T(nominal = 500.0) for variable: pipePressureLoss4.T
// Warning: Alias set with different nominal values
//  * candidate: pipePressureLoss3.pro.T(nominal = 320.0)
//  * candidate: pipePressureLoss3.T(nominal = 500.0)
// => select value from pipePressureLoss3.T(nominal = 500.0) for variable: pipePressureLoss3.T
// Warning: Alias set with different nominal values
//  * candidate: pipePressureLoss2.pro.T(nominal = 320.0)
//  * candidate: pipePressureLoss2.T(nominal = 500.0)
// => select value from pipePressureLoss2.T(nominal = 500.0) for variable: pipePressureLoss2.T
// Warning: Alias set with different nominal values
//  * candidate: mixer21.pro.T(nominal = 320.0)
//  * candidate: mixer21.T(nominal = 500.0)
// => select value from mixer21.T(nominal = 500.0) for variable: mixer21.T
// Warning: Alias set with different nominal values
//  * candidate: splitter21.pro.T(nominal = 320.0)
//  * candidate: splitter21.T(nominal = 500.0)
// => select value from splitter21.T(nominal = 500.0) for variable: splitter21.T
// Warning: Alias set with different nominal values
//  * candidate: pipePressureLoss1.pro.T(nominal = 320.0)
//  * candidate: pipePressureLoss1.T(nominal = 500.0)
// => select value from pipePressureLoss1.T(nominal = 500.0) for variable: pipePressureLoss1.T
// "
// Warning: The variable 'mD' was not found in the system of knowns
// "{{{mD[\\[FormalT]],mHDNK[\\[FormalT]],mA5[\\[FormalT]],mA6[\\[FormalT]],mA7[\\[FormalT]],mHK[\\[FormalT]],mV[\\[FormalT]],mSPLL[\\[FormalT]],mSPL[\\[FormalT]],mFDKELL[\\[FormalT]],mFDKEL[\\[FormalT]]},{mFDKEL[\\[FormalT]] + (mFDKELL[\\[FormalT]] + (ToExpression[StringReplace[\"0.4\",\"e\"->\"*1.0*10^\"]] * mV[\\[FormalT]] + (-mSPLL[\\[FormalT]] - mSPL[\\[FormalT]])))==0,mSPL[\\[FormalT]] + (mSPLL[\\[FormalT]] + (-mA5[\\[FormalT]] - mHK[\\[FormalT]] - mA7[\\[FormalT]] - mV[\\[FormalT]] - mA6[\\[FormalT]]))==0,mA7[\\[FormalT]] + (mA6[\\[FormalT]] + (mA5[\\[FormalT]] - mHDNK[\\[FormalT]]))==0}},{{},{}},{\"None\",\"None\",\"None\",\"None\",\"None\",\"None\",\"None\",\"None\",\"None\",\"None\",\"None\"}}"
// ""
// endResult
